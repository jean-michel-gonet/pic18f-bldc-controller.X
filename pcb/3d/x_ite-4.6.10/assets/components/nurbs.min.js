!function(){var t=X3D.define;X3D.require;t("x_ite/Components/NURBS/Contour2D",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Core/X3DNode","x_ite/Bits/X3DConstants","x_ite/Bits/X3DCast"],function(t,e,i,n,o,r){"use strict";function s(t){n.call(this,t),this.addType(o.Contour2D),this.childNodes=[]}return s.prototype=Object.assign(Object.create(n.prototype),{constructor:s,fieldDefinitions:new i([new e(o.inputOutput,"metadata",new t.SFNode),new e(o.inputOnly,"addChildren",new t.MFNode),new e(o.inputOnly,"removeChildren",new t.MFNode),new e(o.inputOutput,"children",new t.MFNode)]),getTypeName:function(){return"Contour2D"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"trimmingContour"},initialize:function(){n.prototype.initialize.call(this),this.children_.addInterest("set_children__",this),this.set_children__()},set_children__:function(){var t=this.childNodes;t.length=0;for(var e=0,i=this.children_.length;e<i;++e){var n=r(o.NurbsCurve2D,this.children_[e]);if(n)t.push(n);else{var n=r(o.ContourPolyline2D,this.children_[e]);n&&t.push(n)}}},addTrimmingContour:function(t){for(var e=this.childNodes,i=0,n=e.length;i<n;++i)t.push(e[i].tessellate(2))}}),s}),t("x_ite/Components/NURBS/X3DNurbsControlCurveNode",["x_ite/Components/Core/X3DNode","x_ite/Bits/X3DConstants"],function(t,e){"use strict";function i(i){t.call(this,i),this.addType(e.X3DNurbsControlCurveNode)}return i.prototype=Object.assign(Object.create(t.prototype),{constructor:i}),i}),t("x_ite/Components/NURBS/ContourPolyline2D",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/NURBS/X3DNurbsControlCurveNode","x_ite/Bits/X3DConstants","standard/Math/Numbers/Vector3"],function(t,e,i,n,o,r){"use strict";function s(t){n.call(this,t),this.addType(o.ContourPolyline2D),this.controlPoints=[]}return s.prototype=Object.assign(Object.create(n.prototype),{constructor:s,fieldDefinitions:new i([new e(o.inputOutput,"metadata",new t.SFNode),new e(o.inputOutput,"controlPoint",new t.MFVec2d)]),getTypeName:function(){return"ContourPolyline2D"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"children"},tessellate:function(t){switch(t){case 0:for(var e=this.controlPoint_.getValue(),i=this.controlPoints,n=0,o=this.controlPoint_.length;n<o;++n){var s=2*n;i[s+0]=e[s+0],i[s+1]=e[s+1]}return i.length=2*o,i;case 1:for(var e=this.controlPoint_.getValue(),i=this.controlPoints,n=0,o=this.controlPoint_.length;n<o;++n){var s=2*n,u=3*n;i[u+0]=e[s+0],i[u+1]=0,i[u+2]=e[s+1]}return i.length=3*o,i;case 3:for(var e=this.controlPoint_.getValue(),i=this.controlPoints,n=0,o=this.controlPoint_.length;n<o;++n){var s=2*n;i[n]=new r(e[s+0],e[s+1],0)}return i.length=o,i}}}),s}),t("x_ite/Components/NURBS/CoordinateDouble",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Rendering/X3DCoordinateNode","x_ite/Bits/X3DConstants"],function(t,e,i,n,o){"use strict";function r(t){n.call(this,t),this.addType(o.CoordinateDouble)}return r.prototype=Object.assign(Object.create(n.prototype),{constructor:r,fieldDefinitions:new i([new e(o.inputOutput,"metadata",new t.SFNode),new e(o.inputOutput,"point",new t.MFVec3d)]),getTypeName:function(){return"CoordinateDouble"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"coord"}}),r}),t("x_ite/Browser/NURBS/NURBS",["standard/Math/Numbers/Vector2","standard/Math/Numbers/Vector3","standard/Math/Numbers/Vector4"],function(t,e,i){"use strict";return{getTessellation:function(t,e){return t>0?t+1:t<0?-t*e+1:2*e+1},getClosed2D:function(t,e,i,n){var o=n.length;return!(i.length===o&&i[0]!==i[o-1]||!n[0].equals(n[o-1])||!this.isPeriodic(t,o,e))},getClosed:function(){var t=new e(0,0,0),i=new e(0,0,0);return function(e,n,o,r){var s=r.getSize();return!(o.length===s&&o[0]!==o[s-1]||!r.get1Point(0,t).equals(r.get1Point(s-1,i))||!this.isPeriodic(e,s,n))}}(),getUClosed:function(){var t=new e(0,0,0),i=new e(0,0,0);return function(e,n,o,r,s,u){for(var a=s.length===u.getSize(),l=0,h=o;l<h;++l){var d=l*n,c=l*n+n-1;if(a&&s[d]!==s[c])return!1;if(!u.get1Point(d,t).equals(u.get1Point(c,i)))return!1}return!!this.isPeriodic(e,n,r)}}(),getVClosed:function(){var t=new e(0,0,0),i=new e(0,0,0);return function(e,n,o,r,s,u){for(var a=s.length===u.getSize(),l=0,h=n;l<h;++l){var d=l,c=(o-1)*n+l;if(a&&s[d]!==s[c])return!1;if(!u.get1Point(d,t).equals(u.get1Point(c,i)))return!1}return!!this.isPeriodic(e,o,r)}}(),isPeriodic:function(t,e,i){if(i.length===e+t){for(var n=1,o=1,r=t;o<r;++o)n+=i[o]===i[0];if(n===t)return!1;for(var n=1,o=i.length-t,r=i.length-1;o<r;++o)n+=i[o]===i[r];if(n===t)return!1}return!0},getKnots:function(t,e,i,n,o){for(var r=t||[],s=0,u=o.length;s<u;++s)r[s]=o[s];r.length=o.length;var a=!0;if(r.length===n+i){a=!1;for(var l=0,s=1,u=r.length;s<u;++s)r[s]==r[s-1]?++l:l=0,l>i-1&&(a=!0),r[s-1]>r[s]&&(a=!0)}if(a)for(var s=0,u=n+i;s<u;++s)r[s]=s/(u-1);if(e)for(var s=1,u=i-1;s<u;++s)r.push(r[r.length-1]+(r[s]-r[s-1]));return r},getWeights:function(t,e,i){if(i.length===e){for(var n=t||[],o=0;o<e;++o)n[o]=i[o];return n.length=e,n}},getUVWeights:function(t,e,i,n){var o=e*i;if(n.length===o){for(var r=t||[],s=0,u=0;s<e;++s)for(var a=0;a<i;++a,++u)r[u]=n[u];return r.length=o,r}},getControlPoints2D:function(i,n,o,r,s){var u=i||[],a=s.getValue(),l=s.length,h=Boolean(r),d=h?e:t;u.haveWeights!==h&&(u.haveWeights=h,u.length=0);for(var c=0;c<l;++c){var g=2*c,p=u[c]||new d(0,0,0);u[c]=p.set(a[g+0],a[g+1],h?r[c]:0)}if(u.length=l,n)for(var c=1,f=o-1;c<f;++c)u.push(u[c]);return u},getControlPoints:function(t,n,o,r,s){var u=t||[],a=s.getSize(),l=Boolean(r),h=l?i:e;u.haveWeights!==l&&(u.haveWeights=l,u.length=0);for(var d=0;d<a;++d){var c=u[d]=s.get1Point(d,u[d]||new h(0,0,0,0));l&&(c.w=r[d])}if(u.length=a,n)for(var d=1,g=o-1;d<g;++d)u.push(u[d]);return u},getUVControlPoints:function(t,n,o,r,s,u,a,l,h){var d=t||[],c=Boolean(l),g=c?i:e;d.haveWeights!==c&&(d.haveWeights=c,d.length=0);for(var p=0;p<u;++p){var f=d[p];f||(f=d[p]=[]);for(var _=0;_<a;++_){var m=_*u+p;f[_]=h.get1Point(m,f[_]||new g(0,0,0,0)),c&&(f[_].w=l[m])}if(f.length=a,o)for(var v=1,y=s-1;v<y;++v)f.push(f[v])}if(d.length=u,n)for(var v=1,y=r-1;v<y;++v)d.push(d[v]);return d},getTexControlPoints:function(t,e,n,o,r,s,u,a){for(var l=t||[],h=0;h<s;++h){var d=l[h];d||(d=l[h]=[]);for(var c=0;c<u;++c){var g=c*s+h;d[c]=a.get1Point(g,d[c]||new i(0,0,0,0))}if(d.length=u,n)for(var p=1,f=r-1;p<f;++p)d.push(d[p])}if(l.length=s,e)for(var p=1,f=o-1;p<f;++p)l.push(l[p]);return l}}}),t("x_ite/Components/NURBS/X3DParametricGeometryNode",["x_ite/Components/Rendering/X3DGeometryNode","x_ite/Bits/X3DConstants","x_ite/Browser/NURBS/NURBS"],function(t,e,i){"use strict";function n(i){t.call(this,i),this.addType(e.X3DParametricGeometryNode)}return n.prototype=Object.assign(Object.create(t.prototype),{constructor:n,getKnots:function(t,e,n,o,r){return i.getKnots(t,e,n,o,r)}}),n}),t("nurbs/src/utils/is-ndarray",[],function(){"use strict";return function(t){return!!t&&(!!t.dtype&&new RegExp("function View[0-9]+d(:?"+t.dtype+")+").test(String(t.constructor)))}}),t("nurbs/src/utils/is-ndarray-like",[],function(){"use strict";return function(t){return!!t&&(void 0!==t.data&&Array.isArray(t.shape)&&void 0!==t.offset&&void 0!==t.stride)}}),t("nurbs/src/utils/is-array-like",[],function(){"use strict";return function(t){return Array.isArray(t)||ArrayBuffer.isView(t)||void 0!==t.length}}),t("nurbs/src/utils/infer-type",["nurbs/src/utils/is-ndarray","nurbs/src/utils/is-ndarray-like","nurbs/src/utils/is-array-like"],function(t,e,i){"use strict";function n(o){if(o){if(t(o)||e(o))return"generic"===o.dtype?n.GENERIC_NDARRAY:n.NDARRAY;if(i(o)){for(var r=o;i(r[0]);r=r[0]);return"x"in r?n.ARRAY_OF_OBJECTS:n.ARRAY_OF_ARRAYS}throw new Error("Unhandled data type. Got type: "+typeof o)}}return n.ARRAY_OF_OBJECTS="Obj",n.ARRAY_OF_ARRAYS="Arr",n.NDARRAY="Nd",n.GENERIC_NDARRAY="GenNd",n.PACKED="PackArr",n}),t("nurbs/src/utils/cache-key",["nurbs/src/utils/is-array-like"],function(t){"use strict";function e(t){return t[0].toUpperCase()+t.slice(1)}return function(i,n,o,r,s,u){var a,l=[],h=!1;for(a=0;a<i.splineDimension;a++){var d=t(i.knots)&&t(i.knots[a]);d&&(h=!0),l.push("Deg"+i.degree[a]+(d?"":"Uniform")+e(i.boundary[a]))}var c=[[h?"NU":"",i.weights?"RBS":"BS"].join("")+i.dimension+"D",l.join("_")];return r&&c.push(r+"Pts"),s&&c.push(s+"Wts"),u&&c.push(u+"Kts"),n&&c.push("debug"),o&&c.push("chk"),c.join("_")}}),t("nurbs/src/utils/variable",[],function(){"use strict";var t=function t(e,i){return function(i,n){void 0===i||Array.isArray(i)||(i=[i]);for(var o=[],r=0;r<i.length;r++)o.push(t.sum(i[r]));if(n)for(i=0;i<o.length;i++)void 0!==n[i]&&(o[i]="("+o[i]+" + "+n[i]+") % "+n[i]);return e+o.join("_")}};return t.sum=function(t){return t=Array.isArray(t)?t:[t],t=t.filter(function(t){return void 0!==t&&0!==t}),0===t.length&&t.push(0),t.join(" + ")},t}),t("nurbs/src/utils/create-accessors",["nurbs/src/utils/infer-type","nurbs/src/utils/variable"],function(t,e){"use strict";function i(t){return function(i,n){void 0===i||Array.isArray(i)||(i=[i]);for(var o=[],r=0;r<i.length;r++)o.push(e.sum(i[r]));if(n)for(i=0;i<o.length;i++)void 0!==n[i]&&(o[i]="("+o[i]+" + "+n[i]+") % "+n[i]);return t(o)}}function n(e,n){if(n)switch(t(n)){case t.ARRAY_OF_OBJECTS:return i(function(t){var i=t.pop();return e+"["+t.join("][")+"]"+o[i]});case t.ARRAY_OF_ARRAYS:return i(function(t){return e+"["+t.join("][")+"]"});case t.GENERIC_NDARRAY:return i(function(t){return e+".get("+t.join(",")+")"});case t.NDARRAY:return i(function(t){for(var i=[e+"Offset"],n=0;n<t.length;n++)i.push(e+"Stride"+n+" * ("+t[n]+")");return e+"["+i.join(" + ")+"]"});case t.PACKED:default:return}}var o=[".x",".y",".z",".w"];return function(t){var e={},i=n("x",t.points);i&&(e.point=i);var i=n("w",t.weights);i&&(e.weight=i);var i=n("k",t.knots);return i&&(e.knot=i),e}}),t("nurbs/src/numerical-derivative",[],function(){"use strict";var t=[],e=[];return function(i,n,o){if(1!==n)throw new Error("Numerical derivative not implemented for order n = "+n+".");var r,s=void 0===arguments[this.splineDimension+3]?1e-4:arguments[this.splineDimension+3];for(t.length=this.splineDimension,r=0;r<this.splineDimension;r++)t[r+1]=arguments[r+3];var u,a,l,h=this.domain,d=h[o][0],c=h[o][1],g=t[o+1],p=(c-d)*s;for("closed"===this.boundary[o]?(l=c-d,u=d+(g-d-p+l)%l,a=d+(g-d+p+l)%l,p*=2):(u=Math.min(c,Math.max(d,g-p)),a=Math.min(c,Math.max(d,g+p)),p=a-u),t[o+1]=u,t[0]=e,this.evaluate.apply(null,t),t[o+1]=a,t[0]=i,this.evaluate.apply(null,t),r=0;r<this.dimension;r++)i[r]=(i[r]-e[r])/p;return i}}),t("nurbs/src/utils/ndloop",[],function(){"use strict";return function(t,e){for(var i=1,n=0,o=[];n<t.length;n++)i*=Array.isArray(t[n])?t[n][1]-t[n][0]:t[n],o[n]=Array.isArray(t[n])?t[n][0]:0;for(var r=0;r<i;r++)for(e(o.slice()),n=t.length-1;n>=0;n--){if(o[n]!==(Array.isArray(t[n])?t[n][1]:t[n])-1){o[n]++;break}o[n]=Array.isArray(t[n])?t[n][0]:0}}}),t("nurbs/src/utils/accessor-preamble",["nurbs/src/utils/infer-type"],function(t){"use strict";return function(e,i,n,o){var r=[];switch(t(o)){case t.NDARRAY:r.push("  var "+i+" = "+n+".data;"),r.push("  var "+i+"Offset = "+n+".offset;");for(var s=0;s<o.dimension;s++)r.push("  var "+i+"Stride"+s+" = "+n+".stride["+s+"];");break;case t.ARRAY_OF_OBJECTS:case t.ARRAY_OF_ARRAYS:r.push("  var "+i+" = "+n+";")}return r.join("\n")}}),t("nurbs/src/utils/size-getter",["nurbs/src/utils/is-ndarray-like"],function(t){"use strict";return function(e,i,n){if(e){if(t(e))return i+".shape["+n+"]";for(var o=i,r=0;r<n;r++)o+="[0]";return o+".length"}return"this.size["+n+"]"}}),t("nurbs/src/evaluate",["nurbs/src/utils/ndloop","nurbs/src/utils/variable","nurbs/src/utils/accessor-preamble","nurbs/src/utils/infer-type","nurbs/src/utils/is-array-like","nurbs/src/utils/size-getter"],function(t,e,i,n,o,r){"use strict";var s={},u={};return function(a,l,h,d,c,g,p){function f(t){k.push("  "+(t||""))}function _(t){d&&f(t)}function m(t,e,i){return"("+t+") ? ("+e+") : ("+i+")"}var v,y,w,N,b,C,S=l.splineDimension,D=l.points,x=l.degree,O=l.weights,F=void 0!==O,P=l.knots,R=l.dimension,B=l.boundary;if(void 0!==p&&null!==p){Array.isArray(p)||(p=[p]);var V=0;for(v=0;v<S;v++)void 0===p[v]&&(p[v]=0),V+=p[v];if(F&&V>1)throw new Error("Analytical derivative not implemented for rational b-splines with order n = "+V+".")}g&&(a="Basis"+a),p&&(a="Der"+p.join("_")+"_"+a);var z=s[a];if(d)var T="function"==typeof d?d:console.log;if(z)return d&&T(u[a]),z.bind(l);var k=[],A="evaluate"+a,I=h.point;g&&(I=function(t,e){for(var i=[],n=0;n<t.length;n++){for(var o=t[n],r=[],s=0;s<o.length;s++)0!==o[s]&&r.push(o[s]);o=r.join(" + "),e[n]&&(o="("+o+" + "+e[n]+") % "+e[n]),i.push(o+" === "+G(n))}return"(("+i.join(" && ")+") ? 1 : 0)"});var j=h.weight,U=h.knot,X=e("k"),M=e("x"),K=e("w"),G=e("i"),E=e("t"),W=d?"domain":"d",q=e(d?"size":"s"),Y=e(d?"knotIndex":"j"),J=!0;for(b=0;b<S;b++)o(P)&&o(P[b])&&(J=!1);if(g)var L=[];var Z=[];for(v=0;v<S;v++)g&&L.push(G([v])),Z.push(E([v]));for(k.push("function "+A+" ("+(g?"":"out, ")+Z.join(", ")+(g?", "+L.join(", "):"")+") {"),f("var h, m, a, b;"),c&&(f("var "+W+" = this.domain;"),f("for (var i = 0; i < this.splineDimension; i++) {"),f("  a = arguments[i + 1];"),f("  if (a < "+W+"[i][0] || a > "+W+"[i][1] || a === undefined || isNaN(a)) {"),f("    throw new Error('Invalid Spline parameter in dimension '+i+'. Valid domain is ['+"+W+"[i][0]+', '+"+W+"[i][1]+']. but got t'+i+' = '+arguments[i + 1]+'.');"),f("  }"),f("}")),b=0;b<S;b++)f("var "+q(b)+" = "+r(D,"this.points",b)+";");k.push(i(l,"x","this.points",D)),F&&k.push(i(l,"w","this.weights",O)),J||k.push(i(l,"k","this.knots",P));var H=[];for(b=0;b<S;b++)switch(n(P)){case n.NDARRAY:H[b]=!0;break;case n.ARRAY_OF_ARRAYS:H[b]=o(P[b])}for(b=0;b<S;b++)if(H[b])for(_("\n  // Bisect to locate the knot interval in dimension "+b+"\n"),f("var "+Y(b)+" = 0;"),f("h = "+q(b)+";"),f("while(h > "+Y(b)+" + 1) {"),f("  m = 0.5 * (h + "+Y(b)+") | 0;"),f("  if ("+U([b,"m"])+" > "+E(b)+") h = m;"),f("  else "+Y(b)+" = m;"),f("}"),_("\n  // Fetch knots for dimension "+b+"\n"),v=1-x[b];v<=x[b];v++)f("closed"===B[b]?v<0?"var "+X([b,v+x[b]-1])+" = "+m(Y(b)+" < "+-v,U([b,0])+" + "+U([b,[q(b),Y(b),v]])+" - "+U([b,[q(b)]]),U([b,[Y(b),v]]))+";":v>0?"var "+X([b,v+x[b]-1])+" = "+m(Y(b)+" + "+v+" > "+q(b),U([b,q(b)])+" + "+U([b,v+" + "+Y(b)+" - "+q(b)])+" - "+U([b,0]),U([b,[Y(b),v]]))+";":"var "+X([b,v+x[b]-1])+" = "+U([b,[Y(b),v]])+";":"var "+X([b,v+x[b]-1])+" = "+U([b,[Y(b),v]])+";");else{for(_("\n  // Directly compute knot interval for dimension "+b+"\n"),"closed"===B[b]?f(Y(b)+" = ("+E(b)+" | 0) % "+q(b)+";"):(f(Y(b)+" = ("+E(b)+" | 0);"),f("if ("+Y(b)+" < "+x[b]+") "+Y(b)+" = "+x[b]+";"),f("if ("+Y(b)+" > "+q(b)+" - 1) "+Y(b)+" = "+q(b)+" - 1;")),_("\n  // Compute and clamp knots for dimension "+b+"\n"),v=1-x[b];v<=x[b];v++)C=X([b,v+x[b]-1]),f("var "+C+" = "+Y(b)+" + "+v+";");if("clamped"===B[b])for(v=1-x[b];v<=x[b];v++)C=X([b,v+x[b]-1]),v<0&&f("if ("+C+" < "+x[b]+") "+C+" = "+x[b]+";"),v>0&&f("if ("+C+" > "+q(b)+") "+C+" = "+q(b)+";");"closed"===B[b]&&(_("\n  // Wrap the B-Spline parameter for closed boundary"),f(E(b)+" %= "+q(b)+";"))}for(b=0,w=[];b<S;b++)w[b]=x[b]+1;for(F&&(_("\n  // Fetch weights\n"),t(w,function(t){for(var e=[],i=[],n=0;n<S;n++)e[n]=[Y(n),t[n]-x[n]],"closed"===B[n]&&t[n]-x[n]<0&&(i[n]=q(n));f("var "+K(t)+" = "+j(e,i)+";")})),d&&f(F?"\n  // Fetch points and project into homogeneous (weighted) coordinates\n":"\n  // Fetch points\n"),t(w,function(t){for(var e=[],i=[],n=0;n<S;n++)e[n]=[Y(n),t[n]-x[n]],"closed"===B[n]&&t[n]-x[n]<0&&(i[n]=q(n));if(g)f(F?"var "+M(t)+" = "+I(e,i)+" * "+K(t)+";":"var "+M(t)+" = "+I(e,i)+";");else for(n=0;n<R;n++){var o=t.concat(n);e[S]=n,f(F?"var "+M(o)+" = "+I(e,i)+" * "+K(t)+";":"var "+M(o)+" = "+I(e,i)+";")}}),_("\n"),_("// Perform De Boor's algorithm"),b=w.length-1;b>=0;b--)for(w[b]=[x[b],x[b]+1],v=0;v<x[b];v++)for(_("\n  // Degree "+x[b]+" evaluation in dimension "+b+", step "+(v+1)+"\n"),y=x[b];y>v;y--){var Q=p&&x[b]-v-p[b]<=0;Q?(f("m = 1 / ("+X([b,y-v+x[b]-1])+" - "+X([b,y-1])+");"),F&&(f("a = ("+E(b)+" - "+X([b,y-1])+") * m;"),f("b = 1 - a;"))):(f("a = ("+E(b)+" - "+X([b,y-1])+") / ("+X([b,y-v+x[b]-1])+" - "+X([b,y-1])+");"),f("b = 1 - a;")),F&&t(w,function(t){var e=t.slice(),i=t.slice();e[b]=y,i[b]=y-1,Q&&F&&f("h = "+K(e)+";"),f(K(e)+" = b * "+K(i)+" + a * "+K(e)+";")}),t(w,function(t){var e,i,n,o=t.slice(),r=t.slice();if(o[b]=y,r[b]=y-1,Q){var s=v+1;if(g)e=F?"h * "+K(r)+" / "+K(o)+" * ":"",i=M(o)+(F?" / h":""),n=M(r)+(F?" / "+K(r):""),f(M(o)+" = "+s+" * "+e+"("+i+" - "+n+") * m;");else{var u=o.slice(),a=r.slice();for(N=0;N<R;N++)u[S]=a[S]=N,e=F?"h * "+K(r)+" / "+K(o)+" * ":"",i=M(u)+(F?" / h":""),n=M(a)+(F?" / "+K(r):""),f(M(u)+" = "+s+" * "+e+"("+i+" - "+n+") * m;")}}else if(g)f(M(o)+" = b * "+M(r)+" + a * "+M(o)+";");else for(N=0;N<R;N++)o[S]=r[S]=N,f(M(o)+" = b * "+M(r)+" + a * "+M(o)+";")}),_("\n")}if(d&&f(F?"\n  // Project back from homogeneous coordinates and return final output\n":"\n  // Return final output\n"),g)f(F?"return "+M(x)+" / "+K(x)+";":"return "+M(x)+";");else for(b=0;b<R;b++)f(F?"out["+b+"] = "+M(x.concat([b]))+" / "+K(x)+";":"out["+b+"] = "+M(x.concat([b]))+";");if(g||f("return out;"),k.push("}"),d){var $=k.join("\n");T($),u[a]=$}var tt=new Function([k.join("\n"),"; return ",A].join(""))();return s[a]=tt,tt.bind(l)}}),t("nurbs/src/transform",["nurbs/src/utils/accessor-preamble","nurbs/src/utils/size-getter","nurbs/src/utils/variable"],function(t,e,i){"use strict";var n={};return function(o,r,s,u){var a,l,h,d,c,g,p,f,_=n[o];if(_)return _.bind(r);var m=[],v="transform"+o;m.push("function "+v+"(m) {"),m.push("var i, w;"),m.push(t(r,"x","this.points",r.points));var y=i(u?"size":"s");for(a=0;a<r.splineDimension;a++)m.push("var "+y(a)+" = "+e(r.points,"this.points",a)+";");for(d=[],a=0;a<r.splineDimension;a++)h="i"+a,d.push(h),m.push("for ("+h+" = "+y(a)+"- 1; "+h+" >= 0; "+h+"--) {");for(a=0;a<r.dimension;a++)m.push("x"+a+" = "+s.point(d.concat([a])));for(c=[],a=0;a<r.dimension;a++)c.push("m["+((r.dimension+1)*(a+1)-1)+"] * x"+a);for(c.push("m["+((r.dimension+1)*(r.dimension+1)-1)+"]"),m.push("var w = ("+c.join(" + ")+") || 1.0;"),a=0;a<r.dimension;a++){for(c=[],g=r.dimension,l=0;l<g;l++)c.push("m["+(l*(g+1)+a)+"] * x"+l);c.push("m["+(l*(g+1)+a)+"]"),f=s.point(d.concat([a])),p="("+c.join(" + ")+") / w",m.push(f+" = "+p+";")}for(a=r.splineDimension-1;a>=0;a--)m.push("}");m.push("return this;"),m.push("}");var w=new Function([m.join("\n"),"; return ",v].join(""))();return u&&console.log(m.join("\n")),n[o]=w,w.bind(r)}}),t("nurbs/src/support",["nurbs/src/utils/ndloop","nurbs/src/utils/variable","nurbs/src/utils/accessor-preamble","nurbs/src/utils/infer-type","nurbs/src/utils/is-array-like","nurbs/src/utils/size-getter"],function(t,e,i,n,o,r){"use strict";var s={};return function(u,a,l,h,d){function c(t){b.push("  "+(t||""))}function g(t,e){c(void 0===e?"out["+B+++"] = "+t.join(" + ")+";":"out["+B+++"] = ("+t.join(" + ")+" + "+e+") % "+e+";")}var p=s[u];if(p)return p.bind(a);var f,_,m,v=a.degree,y=a.knots,w=a.splineDimension,N=a.boundary,b=[],C="support"+u,S=l.knot,D=e("t"),x=h?"domain":"d",O=e(h?"size":"s"),F=e(h?"knotIndex":"i"),P=!0;for(m=0;m<w;m++)o(y)&&o(y[m])&&(P=!1);var R=[];for(f=0;f<w;f++)R.push(D([f]));b.push("function "+C+" (out, "+R.join(", ")+") {");var B=0;for(c("var h, m;"),c("var c = 0;"),d&&(c("var "+x+" = this.domain;"),c("for (var i = 0; i < this.splineDimension; i++) {"),c("  a = arguments[i + 1];"),c("  if (a < "+x+"[i][0] || a > "+x+"[i][1] || a === undefined || isNaN(a)) {"),c("    throw new Error('Invalid Spline parameter in dimension '+i+'. Valid domain is ['+"+x+"[i][0]+', '+"+x+"[i][1]+']. but got t'+i+' = '+arguments[i + 1]+'.');"),c("  }"),c("}")),m=0;m<w;m++)c("var "+O(m)+" = "+r(a.points,"this.points",m)+";");P||b.push(i(a,"k","this.knots",y));var V=[];for(m=0;m<w;m++)switch(n(y)){case n.NDARRAY:V[m]=!0;break;case n.ARRAY_OF_ARRAYS:V[m]=o(y[m])}for(m=0;m<w;m++)V[m]?(c("var "+F(m)+" = 0;"),c("h = "+O(m)+";"),c("while(h > "+F(m)+" + 1) {"),c("  m = 0.5 * (h + "+F(m)+") | 0;"),c("  if ("+S([m,"m"])+" > "+D(m)+") h = m;"),c("  else "+F(m)+" = m;"),c("}")):"closed"===N[m]?c(F(m)+" = ("+D(m)+" | 0) % "+O(m)+";"):(c(F(m)+" = ("+D(m)+" | 0);"),c("if ("+F(m)+" < "+v[m]+") "+F(m)+" = "+v[m]+";"),c("if ("+F(m)+" > "+O(m)+" - 1) "+F(m)+" = "+O(m)+" - 1;"));for(m=0,_=[];m<w;m++)_[m]=v[m]+1;t(_,function(t){for(var e=[],i=[],n=0;n<w;n++)e[n]=[F(n),t[n]-v[n]],"closed"===N[n]&&t[n]-v[n]<0&&(i[n]=O(n));for(n=0;n<w;n++)g(e[n],i[n])}),c("out.length = "+B+";"),c("return out;"),b.push("}"),h&&console.log(b.join("\n"));var z=new Function([b.join("\n"),"; return ",C].join(""))();return s[u]=z,z.bind(a)}}),t("nurbs/extras/sample",["standard/Math/Numbers/Vector3","standard/Math/Geometry/Triangle3"],function(t,e){"use strict";var i=[];return function(t,e,n){t=t||{},n=n||{};var o=t.points=t.points||[],r=t.faces=t.faces||[],s=n.haveWeights,u=e.dimension-s;if(Array.isArray(n.resolution))var a=n.resolution;else var l=void 0===n.resolution?31:n.resolution,a=new Array(e.splineDimension).fill(l);switch(e.splineDimension){case 1:for(var h=a[0],d="closed"===e.boundary[0],c=h+!d,g=c*u,p=n.domain||e.domain,f=p[0],_=f[1]-f[0],m=0;m<c;++m){var v=f[0]+_*m/h,y=m*u;if(e.evaluate(i,v),s)for(var w=i[u],N=0;N<u;++N)o[y+N]=i[N]/w;else for(var N=0;N<u;++N)o[y+N]=i[N]}o.length=g;break;case 2:for(var h=a[0],b=a[1],d="closed"===e.boundary[0],C="closed"===e.boundary[1],c=h+!d,S=b+!C,g=c*S*u,p=n.domain||e.domain,f=p[0],D=p[1],_=f[1]-f[0],x=D[1]-D[0],m=0;m<c;++m)for(var v=f[0]+_*m/h,O=0;O<S;++O){var F=D[0]+x*O/b,y=(m+c*O)*u;if(e.evaluate(i,v,F),s)for(var w=i[u],N=0;N<u;++N)o[y+N]=i[N]/w;else for(var N=0;N<u;++N)o[y+N]=i[N]}o.length=g;for(var d=n.closed[0],C=n.closed[1],P=0,m=0;m<h;++m){var R=m,B=m+1;d&&(B%=h);for(var O=0;O<b;++O){var V=O,z=O+1;C&&(z%=b),r[P++]=R+c*V,r[P++]=B+c*V,r[P++]=B+c*z,r[P++]=R+c*V,r[P++]=B+c*z,r[P++]=R+c*z}}r.length=P;break;default:throw new Error("Can only sample curves and surfaces")}return t}}),t("nurbs/nurbs",["nurbs/src/utils/infer-type","nurbs/src/utils/cache-key","nurbs/src/utils/is-ndarray","nurbs/src/utils/is-ndarray-like","nurbs/src/utils/create-accessors","nurbs/src/numerical-derivative","nurbs/src/utils/is-array-like","nurbs/src/evaluate","nurbs/src/transform","nurbs/src/support","nurbs/extras/sample"],function(t,e,i,n,o,r,s,u,a,l,h){"use strict";function d(t){return void 0===t||null===t}function c(n,h,c,g,p,_){var m,v;!n||s(n)||i(n)?(_=_||{},this.weights=g,this.knots=c,this.degree=h,this.points=n,this.boundary=p,this.debug=_.debug,this.checkBounds=!!_.checkBounds,Object.defineProperty(this,"size",{value:_.size,writable:!0,configurable:!0})):(_=n,this.debug=n.debug,this.checkBounds=!!n.checkBounds,this.weights=n.weights,this.knots=n.knots,this.degree=n.degree,this.boundary=n.boundary,this.points=n.points,Object.defineProperty(this,"size",{value:_.size,writable:!0,configurable:!0}));var y=t(this.points),w=t(this.weights),N=t(this.knots);if(this.points)switch(y){case t.GENERIC_NDARRAY:case t.NDARRAY:Object.defineProperties(this,{splineDimension:{value:this.points.shape.length-1,writable:!1,configurable:!0},dimension:{value:this.points.shape[this.points.shape.length-1],writable:!1,configurable:!0},size:{get:function(){return this.points.shape.slice(0,this.points.shape.length-1)},set:function(){throw new Error("Cannot assign to read only property 'size'")},configurable:!0}});break;case t.ARRAY_OF_OBJECTS:case t.ARRAY_OF_ARRAYS:var b=0,C=this.size||[];C.length=0;for(var S=this.points;s(S[0]);S=S[0])b++,C.push(S.length);if(0===b)throw new Error("Expected an array of points");Object.defineProperties(this,{splineDimension:{value:b,writable:!1,configurable:!0},dimension:{value:S.length,writable:!1,configurable:!0},size:{get:function(){var t=[];t.length=0;for(var e=0,i=this.points;e<this.splineDimension;e++,i=i[0])t[e]=i.length;return t},set:function(){throw new Error("Cannot assign to read only property 'size'")},configurable:!0}});break;case t.PACKED:default:throw new Error("Expected either a packed array, array of arrays, or ndarray of points")}else{if(void 0===this.size||null===this.size)throw new Error("Either points or a control hull size must be provided.");if(s(this.size)||Object.defineProperty(this,"size",{value:[this.size],writable:!0,configurable:!0}),0===this.size.length)throw new Error("`size` must be a number or an array of length at least one.");Object.defineProperties(this,{splineDimension:{value:this.size.length,writable:!1,configurable:!0},dimension:{value:0,writable:!1,configurable:!0}})}if(s(this.degree)){for(m=0;m<this.splineDimension;m++)if(d(this.degree[m]))throw new Error("Missing degree in dimension "+(m+1))}else{var D=!d(this.degree),x=d(this.degree)?2:this.degree;for(this.degree=[],m=0;m<this.splineDimension;m++)if(this.size[m]<=x){if(D)throw new Error("Expected at least "+(x+1)+" points for degree "+x+" spline in dimension "+(m+1)+" but got only "+this.size[m]);this.degree[m]=this.size[m]-1}else this.degree[m]=x}if(v="string"!=typeof this.boundary?"open":this.boundary,!f[v])throw new Error("Boundary type must be one of "+Object.keys(f)+". Got "+v);for(this.boundary=s(this.boundary)?this.boundary:[],this.boundary.length=this.splineDimension,m=0;m<this.splineDimension;m++)if(this.boundary[m]=d(this.boundary[m])?v:this.boundary[m],!f[v])throw new Error("Boundary type must be one of "+Object.keys(f)+". Got "+v+" for dimension "+(m+1));switch(N){case t.ARRAY_OF_ARRAYS:for(s(this.knots)&&this.knots.length>0&&!s(this.knots[0])&&(this.knots=[this.knots]),m=0;m<this.splineDimension;m++){if(this.size[m]<=this.degree[m])throw new Error("Expected at least "+(this.degree[m]+1)+" points in dimension "+(m+1)+" but got "+this.size[m]+".");if(s(this.knots[m])){if("closed"!==this.boundary[m]&&this.knots[m].length!==this.degree[m]+this.size[m]+1)throw new Error("Expected "+(this.degree[m]+this.size[m]+1)+" knots in dimension "+(m+1)+" but got "+this.knots[m].length+".");if("closed"===this.boundary[m]&&this.knots[m].length!==this.size[m]+1){if(!(this.knots[m].length===this.size[m]+this.degree[m]+1))throw new Error("Expected "+(this.size[m]+1)+" knots for closed spline in dimension "+(m+1)+" but got "+this.knots[m].length+".")}}}break;case t.NDARRAY:}var O=e(this,this.debug,this.checkBounds,y,w,N);if(O!==this.__cacheKey){this.__cacheKey=O;var F=o(this);this.evaluate=u(this.__cacheKey,this,F,this.debug,this.checkBounds,!1),this.transform=a(this.__cacheKey,this,F,this.debug),this.support=l(this.__cacheKey,this,F,this.debug,this.checkBounds),this.evaluator=function(t,e){return u(this.__cacheKey,this,F,this.debug,this.checkBounds,e,t)}}return this.numericalDerivative=r.bind(this),this}function g(){var t,e=[],i=this.points;i?n(i)&&(t=i.shape):t=this.size;for(var o=0;o<this.splineDimension;o++){var r=t?t[o]:i.length,s=this.degree[o],u="closed"===this.boundary[o];if(this.knots&&this.knots[o]){var a=this.knots[o];e[o]=[a[u?0:s],a[r]]}else e[o]=[u?0:s,r];i&&(i=i[0])}return e}function p(t,e,i,n,o,r){var s=function(t,e,i,n,o,r){return u(t,e,i,n,o,r),s},u=c.bind(s);return Object.defineProperty(s,"domain",{get:g}),u(t,e,i,n,o,r),s}var f={open:"open",closed:"closed",clamped:"clamped"};return p.sample=h,p}),t("nurbs",["nurbs/nurbs"],function(t){return t}),t("x_ite/Components/NURBS/NurbsCurve",["x_ite/Bits/X3DCast","x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/NURBS/X3DParametricGeometryNode","x_ite/Components/Rendering/X3DLineGeometryNode","x_ite/Bits/X3DConstants","x_ite/Browser/NURBS/NURBS","nurbs"],function(t,e,i,n,o,r,s,u,a){"use strict";function l(t){o.call(this,t),this.addType(s.NurbsCurve),this.setGeometryType(1),this.knots=[],this.weights=[],this.controlPoints=[],this.mesh={},this.sampleOptions={resolution:[]}}return l.prototype=Object.assign(Object.create(o.prototype),r.prototype,{constructor:l,fieldDefinitions:new n([new i(s.inputOutput,"metadata",new e.SFNode),new i(s.inputOutput,"tessellation",new e.SFInt32),new i(s.initializeOnly,"closed",new e.SFBool),new i(s.initializeOnly,"order",new e.SFInt32(3)),new i(s.initializeOnly,"knot",new e.MFDouble),new i(s.inputOutput,"weight",new e.MFDouble),new i(s.inputOutput,"controlPoint",new e.SFNode)]),getTypeName:function(){return"NurbsCurve"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"geometry"},initialize:function(){o.prototype.initialize.call(this),this.controlPoint_.addInterest("set_controlPoint__",this),this.setPrimitiveMode(this.getBrowser().getContext().LINES),this.setSolid(!1),this.set_controlPoint__()},set_controlPoint__:function(){this.controlPointNode&&this.controlPointNode.removeInterest("requestRebuild",this),this.controlPointNode=t(s.X3DCoordinateNode,this.controlPoint_),this.controlPointNode&&this.controlPointNode.addInterest("requestRebuild",this)},getTessellation:function(t){return u.getTessellation(this.tessellation_.getValue(),t-this.order_.getValue())},getClosed:function(t,e,i,n){return!!this.closed_.getValue()&&u.getClosed(t,e,i,n)},getWeights:function(t,e,i){return u.getWeights(t,e,i)},getControlPoints:function(t,e,i,n,o){return u.getControlPoints(t,e,i,n,o)},tessellate:function(){if(this.order_.getValue()<2)return[];if(!this.controlPointNode)return[];if(this.controlPointNode.getSize()<this.order_.getValue())return[];var t=this.getVertices(),e=[];if(t.length){for(var i=0,n=t.length;i<n;i+=8)e.push(t[i],t[i+1],t[i+2]);e.push(t[n-4],t[n-3],t[n-2])}return e},build:function(){if(!(this.order_.getValue()<2)&&this.controlPointNode&&!(this.controlPointNode.getSize()<this.order_.getValue())){var t=this.getClosed(this.order_.getValue(),this.knot_,this.weight_,this.controlPointNode),e=this.getWeights(this.weights,this.controlPointNode.getSize(),this.weight_),i=this.getControlPoints(this.controlPoints,t,this.order_.getValue(),e,this.controlPointNode),n=this.getKnots(this.knots,t,this.order_.getValue(),this.controlPointNode.getSize(),this.knot_),o=(n[n.length-1],n[0],this.order_.getValue()-1),r=this.surface=(this.surface||a)({boundary:["open"],degree:[o],knots:[n],points:i,debug:!1});this.sampleOptions.resolution[0]=this.getTessellation(n.length),this.sampleOptions.haveWeights=Boolean(e);for(var s=a.sample(this.mesh,r,this.sampleOptions),u=s.points,l=this.getVertices(),h=3,d=u.length;h<d;h+=3){var c=h-3;l.push(u[c],u[c+1],u[c+2],1),l.push(u[h],u[h+1],u[h+2],1)}}}}),l}),t("x_ite/Components/NURBS/NurbsCurve2D",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/NURBS/X3DNurbsControlCurveNode","x_ite/Bits/X3DConstants","x_ite/Browser/NURBS/NURBS","standard/Math/Numbers/Vector3","nurbs"],function(t,e,i,n,o,r,s,u){"use strict";function a(t){n.call(this,t),this.addType(o.NurbsCurve2D),this.knots=[],this.weights=[],this.controlPoints=[],this.mesh={},this.sampleOptions={resolution:[]},this.array=[]}return a.prototype=Object.assign(Object.create(n.prototype),{constructor:a,fieldDefinitions:new i([new e(o.inputOutput,"metadata",new t.SFNode),new e(o.inputOutput,"tessellation",new t.SFInt32),new e(o.initializeOnly,"closed",new t.SFBool),new e(o.initializeOnly,"order",new t.SFInt32(3)),new e(o.initializeOnly,"knot",new t.MFDouble),new e(o.inputOutput,"weight",new t.MFDouble),new e(o.inputOutput,"controlPoint",new t.MFVec2d)]),getTypeName:function(){return"NurbsCurve2D"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"children"},getTessellation:function(t){return r.getTessellation(this.tessellation_.getValue(),t-this.order_.getValue())},getClosed:function(t,e,i,n){return!!this.closed_.getValue()&&r.getClosed2D(t,e,i,n)},getKnots:function(t,e,i,n,o){return r.getKnots(t,e,i,n,o)},getWeights:function(t,e,i){return r.getWeights(t,e,i)},getControlPoints:function(t,e,i,n,o){return r.getControlPoints2D(t,e,i,n,o)},tessellate:function(t){var e=this.array;if(e.length=0,this.order_.getValue()<2)return e
;if(this.controlPoint_.length<this.order_.getValue())return e;var i=this.getClosed(this.order_.getValue(),this.knot_,this.weight_,this.controlPoint_),n=this.getWeights(this.weights,this.controlPoint_.length,this.weight_),o=this.getControlPoints(this.controlPoints,i,this.order_.getValue(),n,this.controlPoint_),r=this.getKnots(this.knots,i,this.order_.getValue(),this.controlPoint_.length,this.knot_),a=(r[r.length-1],r[0],this.order_.getValue()-1),l=this.surface=(this.surface||u)({boundary:["open"],degree:[a],knots:[r],points:o,debug:!1});this.sampleOptions.resolution[0]=this.getTessellation(r.length),this.sampleOptions.haveWeights=Boolean(n);var h=u.sample(this.mesh,l,this.sampleOptions),d=h.points;switch(t){case 0:for(var c=0,g=d.length;c<g;c+=2)e.push(d[c],d[c+1]);break;case 1:for(var c=0,g=d.length;c<g;c+=2)e.push(d[c],0,d[c+1]);break;case 2:for(var c=0,g=d.length;c<g;c+=2)e.push(new s(d[c],d[c+1],0))}return e}}),a}),t("x_ite/Components/NURBS/NurbsOrientationInterpolator",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Core/X3DChildNode","x_ite/Components/Interpolation/OrientationInterpolator","x_ite/Bits/X3DConstants","x_ite/Bits/X3DCast","x_ite/Browser/NURBS/NURBS","standard/Math/Numbers/Vector3","standard/Math/Numbers/Rotation4","nurbs"],function(t,e,i,n,o,r,s,u,a,l,h){"use strict";function d(e){n.call(this,e),this.addType(r.NurbsOrientationInterpolator),this.addChildObjects("rebuild",new t.SFTime),this.interpolator=new o(e),this.knots=[],this.weights=[],this.controlPoints=[],this.mesh={},this.sampleOptions={resolution:[128]}}return d.prototype=Object.assign(Object.create(n.prototype),{constructor:d,fieldDefinitions:new i([new e(r.inputOutput,"metadata",new t.SFNode),new e(r.inputOnly,"set_fraction",new t.SFFloat),new e(r.inputOutput,"order",new t.SFInt32(3)),new e(r.inputOutput,"knot",new t.MFDouble),new e(r.inputOutput,"weight",new t.MFDouble),new e(r.inputOutput,"controlPoint",new t.SFNode),new e(r.outputOnly,"value_changed",new t.SFRotation)]),getTypeName:function(){return"NurbsOrientationInterpolator"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"children"},initialize:function(){n.prototype.initialize.call(this),this.order_.addInterest("requestRebuild",this),this.knot_.addInterest("requestRebuild",this),this.weight_.addInterest("requestRebuild",this),this.controlPoint_.addInterest("set_controlPoint__",this),this.rebuild_.addInterest("build",this),this.set_fraction_.addFieldInterest(this.interpolator.set_fraction_),this.interpolator.value_changed_.addFieldInterest(this.value_changed_),this.interpolator.setup(),this.set_controlPoint__()},set_controlPoint__:function(){this.controlPointNode&&this.controlPointNode.removeInterest("requestRebuild",this),this.controlPointNode=s(r.X3DCoordinateNode,this.controlPoint_),this.controlPointNode&&this.controlPointNode.addInterest("requestRebuild",this),this.requestRebuild()},getClosed:function(t,e,i,n){return!1},getKnots:function(t,e,i,n,o){return u.getKnots(t,e,i,n,o)},getWeights:function(t,e,i){return u.getWeights(t,e,i)},getControlPoints:function(t,e,i,n,o){return u.getControlPoints(t,e,i,n,o)},requestRebuild:function(){this.rebuild_.addEvent()},build:function(){if(!(this.order_.getValue()<2)&&this.controlPointNode&&!(this.controlPointNode.getSize()<this.order_.getValue())){var t=this.getClosed(this.order_.getValue(),this.knot_,this.weight_,this.controlPointNode),e=this.getWeights(this.weights,this.controlPointNode.getSize(),this.weight_),i=this.getControlPoints(this.controlPoints,t,this.order_.getValue(),e,this.controlPointNode),n=this.getKnots(this.knots,t,this.order_.getValue(),this.controlPointNode.getSize(),this.knot_),o=n[n.length-1]-n[0],r=this.order_.getValue()-1,s=this.surface=(this.surface||h)({boundary:["open"],degree:[r],knots:[n],points:i,debug:!1});this.sampleOptions.haveWeights=Boolean(e);var u=h.sample(this.mesh,s,this.sampleOptions),d=u.points,c=this.interpolator;c.key_.length=0,c.keyValue_.length=0;for(var g=0,p=d.length-3;g<p;g+=3){var f=new a(d[g+3]-d[g+0],d[g+4]-d[g+1],d[g+5]-d[g+2]);c.key_.push(n[0]+g/(p-3+3*t)*o),c.keyValue_.push(new l(a.zAxis,f))}t&&(c.key_.push(n[0]+o),c.keyValue_.push(c.keyValue_[0]))}}}),d}),t("x_ite/Components/NURBS/X3DNurbsSurfaceGeometryNode",["x_ite/Components/NURBS/X3DParametricGeometryNode","x_ite/Bits/X3DConstants","x_ite/Bits/X3DCast","x_ite/Browser/NURBS/NURBS","standard/Math/Algorithm","standard/Math/Numbers/Vector3","standard/Math/Geometry/Triangle3","nurbs"],function(t,e,i,n,o,r,s,u){"use strict";function a(i){t.call(this,i),this.addType(e.X3DNurbsSurfaceGeometryNode),this.tessellationScale=1,this.uKnots=[],this.vKnots=[],this.weights=[],this.controlPoints=[],this.mesh={},this.sampleOptions={resolution:[],closed:[]},this.textUKnots=[],this.textVKnots=[],this.textWeights=[],this.texControlPoints=[],this.texMesh={}}return a.prototype=Object.assign(Object.create(t.prototype),{constructor:a,initialize:function(){t.prototype.initialize.call(this),this.texCoord_.addInterest("set_texCoord__",this),this.controlPoint_.addInterest("set_controlPoint__",this),this.set_texCoord__(),this.set_controlPoint__()},set_texCoord__:function(){this.texCoordNode&&this.texCoordNode.removeInterest("requestRebuild",this),this.nurbsTexCoordNode&&this.nurbsTexCoordNode.removeInterest("requestRebuild",this),this.texCoordNode=i(e.X3DTextureCoordinateNode,this.texCoord_),this.nurbsTexCoordNode=i(e.NurbsTextureCoordinate,this.texCoord_),this.texCoordNode&&this.texCoordNode.addInterest("requestRebuild",this),this.nurbsTexCoordNode&&this.nurbsTexCoordNode.addInterest("requestRebuild",this)},set_controlPoint__:function(){this.controlPointNode&&this.controlPointNode.removeInterest("requestRebuild",this),this.controlPointNode=i(e.X3DCoordinateNode,this.controlPoint_),this.controlPointNode&&this.controlPointNode.addInterest("requestRebuild",this)},setTessellationScale:function(t){this.tessellationScale=t,this.requestRebuild()},getUTessellation:function(t){return Math.floor(n.getTessellation(this.uTessellation_.getValue(),t-this.uOrder_.getValue())*this.tessellationScale)},getVTessellation:function(t){return Math.floor(n.getTessellation(this.vTessellation_.getValue(),t-this.vOrder_.getValue())*this.tessellationScale)},getUClosed:function(t,e,i,o,r,s){return!!this.uClosed_.getValue()&&n.getUClosed(t,e,i,o,r,s)},getVClosed:function(t,e,i,o,r,s){return!!this.vClosed_.getValue()&&n.getVClosed(t,e,i,o,r,s)},getUVWeights:function(t,e,i,o){return n.getUVWeights(t,e,i,o)},getTexControlPoints:function(t,e,i,o,r,s,u,a){return n.getTexControlPoints(t,e,i,o,r,s,u,a)},getUVControlPoints:function(t,e,i,o,r,s,u,a,l){return n.getUVControlPoints(t,e,i,o,r,s,u,a,l)},getTrimmingContours:function(){},build:function(){if(!(this.uOrder_.getValue()<2)&&!(this.vOrder_.getValue()<2)&&!(this.uDimension_.getValue()<this.uOrder_.getValue())&&!(this.vDimension_.getValue()<this.vOrder_.getValue())&&this.controlPointNode&&this.controlPointNode.getSize()===this.uDimension_.getValue()*this.vDimension_.getValue()){var t=this.getUClosed(this.uOrder_.getValue(),this.uDimension_.getValue(),this.vDimension_.getValue(),this.uKnot_,this.weight_,this.controlPointNode),e=this.getVClosed(this.vOrder_.getValue(),this.uDimension_.getValue(),this.vDimension_.getValue(),this.vKnot_,this.weight_,this.controlPointNode),i=this.getUVWeights(this.weights,this.uDimension_.getValue(),this.vDimension_.getValue(),this.weight_),n=this.getUVControlPoints(this.controlPoints,t,e,this.uOrder_.getValue(),this.vOrder_.getValue(),this.uDimension_.getValue(),this.vDimension_.getValue(),i,this.controlPointNode),o=this.getKnots(this.uKnots,t,this.uOrder_.getValue(),this.uDimension_.getValue(),this.uKnot_),r=this.getKnots(this.vKnots,e,this.vOrder_.getValue(),this.vDimension_.getValue(),this.vKnot_),s=(o[o.length-1],o[0],r[r.length-1],r[0],this.uOrder_.getValue()-1),a=this.vOrder_.getValue()-1,l=this.surface=(this.surface||u)({boundary:["open","open"],degree:[s,a],knots:[o,r],points:n,debug:!1}),h=this.sampleOptions;h.resolution[0]=this.getUTessellation(o.length),h.resolution[1]=this.getVTessellation(r.length),h.closed[0]=t,h.closed[1]=e,h.domain=void 0,h.haveWeights=Boolean(i),h.trimmingContours=this.getTrimmingContours();for(var d=u.sample(this.mesh,l,h),c=d.faces,g=d.points,p=this.getVertices(),f=0,_=c.length;f<_;++f){var m=3*c[f];p.push(g[m],g[m+1],g[m+2],1)}this.buildNurbsTexCoords(t,e,this.uOrder_.getValue(),this.vOrder_.getValue(),o,r,this.uDimension_.getValue(),this.vDimension_.getValue(),l.domain),this.buildNormals(c,g),this.setSolid(this.solid_.getValue()),this.setCCW(!0)}},buildNurbsTexCoords:function(){function t(t,e){return t[0]=t[1]=e[0],t[2]=t[3]=e[e.length-1],t}var e=[],i=[],n=[[[0,0,0,1],[0,1,0,1]],[[1,0,0,1],[1,1,0,1]]];return function(o,r,s,a,l,h,d,c,g){var p=this.sampleOptions;if(this.texCoordNode&&this.texCoordNode.getSize()===d*c)var f=s-1,_=a-1,m=l,v=h,y=this.getTexControlPoints(this.texControlPoints,o,r,s,a,d,c,this.texCoordNode);else if(this.nurbsTexCoordNode&&this.nurbsTexCoordNode.isValid()){var w=this.nurbsTexCoordNode,f=w.uOrder_.getValue()-1,_=w.vOrder_.getValue()-1,m=this.getKnots(this.texUKnots,!1,w.uOrder_.getValue(),w.uDimension_.getValue(),w.uKnot_),v=this.getKnots(this.texVKnots,!1,w.vOrder_.getValue(),w.vDimension_.getValue(),w.vKnot_),N=this.getUVWeights(this.texWeights,w.uDimension_.getValue(),w.vDimension_.getValue(),w.weight_);y=w.getControlPoints(N)}else{var f=1,_=1,m=t(e,l),v=t(i,h),y=n;p.domain=g}var b=this.texSurface=(this.texSurface||u)({boundary:["open","open"],degree:[f,_],knots:[m,v],points:y});p.closed[0]=!1,p.closed[1]=!1,p.haveWeights=!1;for(var C=u.sample(this.texMesh,b,p),S=C.faces,D=C.points,x=this.getTexCoords(),O=0,F=S.length;O<F;++O){var P=4*S[O];x.push(D[P],D[P+1],D[P+2],D[P+3])}this.getMultiTexCoords().push(this.getTexCoords())}}(),buildNormals:function(t,e){for(var i=this.createNormals(t,e),n=this.getNormals(),o=0,r=i.length;o<r;++o){var s=i[o];n.push(s.x,s.y,s.z)}},createNormals:function(t,e){for(var i=this.createFaceNormals(t,e),n=[],r=0,s=t.length;r<s;++r){var u=t[r],a=n[u];a||(a=n[u]=[]),a.push(r)}return this.refineNormals(n,i,o.radians(85))},createFaceNormals:function(){var t=new r(0,0,0),e=new r(0,0,0),i=new r(0,0,0);return function(n,o){for(var u=this.faceNormals||[],a=0,l=n.length;a<l;a+=3){var h=3*n[a],d=3*n[a+1],c=3*n[a+2];t.set(o[h],o[h+1],o[h+2]),e.set(o[d],o[d+1],o[d+2]),i.set(o[c],o[c+1],o[c+2]);var g=s.normal(t,e,i,u[a]||new r(0,0,0));u[a]=g,u[a+1]=g,u[a+2]=g}return u.length=l,u}}()}),a}),t("x_ite/Components/NURBS/NurbsPatchSurface",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/NURBS/X3DNurbsSurfaceGeometryNode","x_ite/Bits/X3DConstants"],function(t,e,i,n,o){"use strict";function r(t){n.call(this,t),this.addType(o.NurbsPatchSurface)}return r.prototype=Object.assign(Object.create(n.prototype),{constructor:r,fieldDefinitions:new i([new e(o.inputOutput,"metadata",new t.SFNode),new e(o.initializeOnly,"solid",new t.SFBool(!0)),new e(o.inputOutput,"uTessellation",new t.SFInt32),new e(o.inputOutput,"vTessellation",new t.SFInt32),new e(o.initializeOnly,"uClosed",new t.SFBool),new e(o.initializeOnly,"vClosed",new t.SFBool),new e(o.initializeOnly,"uOrder",new t.SFInt32(3)),new e(o.initializeOnly,"vOrder",new t.SFInt32(3)),new e(o.initializeOnly,"uDimension",new t.SFInt32),new e(o.initializeOnly,"vDimension",new t.SFInt32),new e(o.initializeOnly,"uKnot",new t.MFDouble),new e(o.initializeOnly,"vKnot",new t.MFDouble),new e(o.inputOutput,"weight",new t.MFDouble),new e(o.inputOutput,"texCoord",new t.SFNode),new e(o.inputOutput,"controlPoint",new t.SFNode)]),getTypeName:function(){return"NurbsPatchSurface"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"geometry"}}),r}),t("x_ite/Components/NURBS/NurbsPositionInterpolator",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Core/X3DChildNode","x_ite/Components/Interpolation/PositionInterpolator","x_ite/Bits/X3DConstants","x_ite/Bits/X3DCast","x_ite/Browser/NURBS/NURBS","nurbs"],function(t,e,i,n,o,r,s,u,a){"use strict";function l(e){n.call(this,e),this.addType(r.NurbsPositionInterpolator),this.addChildObjects("rebuild",new t.SFTime),this.interpolator=new o(e),this.knots=[],this.weights=[],this.controlPoints=[],this.mesh={},this.sampleOptions={resolution:[128]}}return l.prototype=Object.assign(Object.create(n.prototype),{constructor:l,fieldDefinitions:new i([new e(r.inputOutput,"metadata",new t.SFNode),new e(r.inputOnly,"set_fraction",new t.SFFloat),new e(r.inputOutput,"order",new t.SFInt32(3)),new e(r.inputOutput,"knot",new t.MFDouble),new e(r.inputOutput,"weight",new t.MFDouble),new e(r.inputOutput,"controlPoint",new t.SFNode),new e(r.outputOnly,"value_changed",new t.SFVec3f)]),getTypeName:function(){return"NurbsPositionInterpolator"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"children"},initialize:function(){n.prototype.initialize.call(this),this.order_.addInterest("requestRebuild",this),this.knot_.addInterest("requestRebuild",this),this.weight_.addInterest("requestRebuild",this),this.controlPoint_.addInterest("set_controlPoint__",this),this.rebuild_.addInterest("build",this),this.set_fraction_.addFieldInterest(this.interpolator.set_fraction_),this.interpolator.value_changed_.addFieldInterest(this.value_changed_),this.interpolator.setup(),this.set_controlPoint__()},set_controlPoint__:function(){this.controlPointNode&&this.controlPointNode.removeInterest("requestRebuild",this),this.controlPointNode=s(r.X3DCoordinateNode,this.controlPoint_),this.controlPointNode&&this.controlPointNode.addInterest("requestRebuild",this),this.requestRebuild()},getClosed:function(t,e,i,n){return!1},getKnots:function(t,e,i,n,o){return u.getKnots(t,e,i,n,o)},getWeights:function(t,e,i){return u.getWeights(t,e,i)},getControlPoints:function(t,e,i,n,o){return u.getControlPoints(t,e,i,n,o)},requestRebuild:function(){this.rebuild_.addEvent()},build:function(){if(!(this.order_.getValue()<2)&&this.controlPointNode&&!(this.controlPointNode.getSize()<this.order_.getValue())){var e=this.getClosed(this.order_.getValue(),this.knot_,this.weight_,this.controlPointNode),i=this.getWeights(this.weights,this.controlPointNode.getSize(),this.weight_),n=this.getControlPoints(this.controlPoints,e,this.order_.getValue(),i,this.controlPointNode),o=this.getKnots(this.knots,e,this.order_.getValue(),this.controlPointNode.getSize(),this.knot_),r=o[o.length-1]-o[0],s=this.order_.getValue()-1,u=this.surface=(this.surface||a)({boundary:["open"],degree:[s],knots:[o],points:n,debug:!1});this.sampleOptions.haveWeights=Boolean(i);var l=a.sample(this.mesh,u,this.sampleOptions),h=l.points,d=this.interpolator;d.key_.length=0,d.keyValue_.length=0;for(var c=0,g=h.length;c<g;c+=3)d.key_.push(o[0]+c/(g-3)*r),d.keyValue_.push(new t.SFVec3f(h[c],h[c+1],h[c+2]))}}}),l}),t("x_ite/Components/NURBS/NurbsSet",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Core/X3DChildNode","x_ite/Components/Grouping/X3DBoundedObject","x_ite/Bits/X3DConstants","x_ite/Bits/X3DCast"],function(t,e,i,n,o,r,s){"use strict";function u(t,e,i,n,o,r){function s(t){return u[getId(t)]}for(var u={},a=o;a<r;++a)u[getId(n[a])]=!0;return t.remove(e,i,s)}function a(t){n.call(this,t),o.call(this,t),this.addType(r.NurbsSet),this.geometryNodes=[]}return a.prototype=Object.assign(Object.create(n.prototype),o.prototype,{constructor:a,fieldDefinitions:new i([new e(r.inputOutput,"metadata",new t.SFNode),new e(r.inputOutput,"tessellationScale",new t.SFFloat(1)),new e(r.initializeOnly,"bboxSize",new t.SFVec3f(-1,-1,-1)),new e(r.initializeOnly,"bboxCenter",new t.SFVec3f),new e(r.inputOnly,"addGeometry",new t.MFNode),new e(r.inputOnly,"removeGeometry",new t.MFNode),new e(r.inputOutput,"geometry",new t.MFNode)]),getTypeName:function(){return"NurbsSet"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"children"},initialize:function(){n.prototype.initialize.call(this),o.prototype.initialize.call(this),this.tessellationScale_.addInterest("set_tessellationScale__",this),this.addGeometry_.addInterest("set_addGeometry__",this),this.removeGeometry_.addInterest("set_removeGeometry__",this),this.geometry_.addInterest("set_geometry__",this),this.set_geometry__()},set_tessellationScale__:function(){for(var t=Math.max(0,this.tessellationScale_.getValue()),e=0,i=this.geometryNodes.length;e<i;++e)this.geometryNodes[e].setTessellationScale(t)},set_addGeometry__:function(){this.addGeometry_.setTainted(!0),this.addGeometry_.erase(u(this.addGeometry_,0,this.addGeometry_.length,this.geometry_,0,this.geometry_.length),this.addGeometry_.length);for(var t=0,e=this.addGeometry_.length;t<e;++t)this.geometry_.push(this.addGeometry_[t]);this.addGeometry_.setTainted(!1)},set_removeGeometry__:function(){this.geometry_.erase(u(this.geometry_,0,this.geometry_.length,this.removeGeometry_,0,this.removeGeometry_.length),this.geometry__.length)},set_geometry__:function(){for(var t=0,e=this.geometryNodes.length;t<e;++t)this.geometryNodes[t].setTessellationScale(1);this.geometryNodes.length=0;for(var t=0,e=this.geometry_.length;t<e;++t){var i=s(r.X3DNurbsSurfaceGeometryNode,this.geometry_[t]);i&&this.geometryNodes.push(i)}this.set_tessellationScale__()}}),a}),t("standard/Math/Geometry/Triangle2",[],function(){"use strict";return{isPointInTriangle:function(t,e,i,n){var o=(e.y-i.y)*(t.x-i.x)+(i.x-e.x)*(t.y-i.y);if(0==o)return!1;var r=((e.y-i.y)*(n.x-i.x)+(i.x-e.x)*(n.y-i.y))/o;if(r<0||r>1)return!1;var s=((i.y-t.y)*(n.x-i.x)+(t.x-i.x)*(n.y-i.y))/o;if(s<0||s>1)return!1;var u=1-r-s;return!(u<0||u>1)}}}),t("x_ite/Components/NURBS/NurbsSurfaceInterpolator",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Core/X3DChildNode","x_ite/Components/NURBS/NurbsPatchSurface","x_ite/Bits/X3DConstants","standard/Math/Geometry/Line3","standard/Math/Geometry/Triangle2","standard/Math/Numbers/Vector3"],function(t,e,i,n,o,r,s,u,a){"use strict";function l(t){n.call(this,t),this.addType(r.NurbsSurfaceInterpolator),this.geometry=new o(t)}return l.prototype=Object.assign(Object.create(n.prototype),{constructor:l,fieldDefinitions:new i([new e(r.inputOutput,"metadata",new t.SFNode),new e(r.inputOnly,"set_fraction",new t.SFVec2f),new e(r.initializeOnly,"uOrder",new t.SFInt32(3)),new e(r.initializeOnly,"vOrder",new t.SFInt32(3)),new e(r.initializeOnly,"uDimension",new t.SFInt32),new e(r.initializeOnly,"vDimension",new t.SFInt32),new e(r.initializeOnly,"uKnot",new t.MFDouble),new e(r.initializeOnly,"vKnot",new t.MFDouble),new e(r.inputOutput,"weight",new t.MFDouble),new e(r.inputOutput,"controlPoint",new t.SFNode),new e(r.outputOnly,"normal_changed",new t.SFVec3f),new e(r.outputOnly,"position_changed",new t.SFVec3f)]),getTypeName:function(){return"NurbsSurfaceInterpolator"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"children"},initialize:function(){this.set_fraction_.addInterest("set_fraction__",this),this.uOrder_.addFieldInterest(this.geometry.uOrder_),this.vOrder_.addFieldInterest(this.geometry.vOrder_),this.uDimension_.addFieldInterest(this.geometry.uDimension_),this.vDimension_.addFieldInterest(this.geometry.vDimension_),this.uKnot_.addFieldInterest(this.geometry.uKnot_),this.vKnot_.addFieldInterest(this.geometry.vKnot_),this.weight_.addFieldInterest(this.geometry.weight_),this.controlPoint_.addFieldInterest(this.geometry.controlPoint_),this.geometry.uTessellation_=128,this.geometry.vTessellation_=128,this.geometry.uOrder_=this.uOrder_,this.geometry.vOrder_=this.vOrder_,this.geometry.uDimension_=this.uDimension_,this.geometry.vDimension_=this.vDimension_,this.geometry.uKnot_=this.uKnot_,this.geometry.vKnot_=this.vKnot_,this.geometry.weight_=this.weight_,this.geometry.controlPoint_=this.controlPoint_,this.geometry.setup()},set_fraction__:function(){var t=new a(0,0,0),e=new a(0,0,0),i=new a(0,0,0),n=new a(0,0,0),o=new s(a.Zero,a.zAxis),r={};return function(){for(var s=this.set_fraction_.getValue(),l=this.geometry.getTexCoords(),h=this.geometry.getNormals(),d=this.geometry.getVertices(),c=0,g=0,p=l.length;c<p;c+=12,g+=9)if(t.set(l[c+0],l[c+1],0),e.set(l[c+4],l[c+5],0),i.set(l[c+7],l[c+9],0),u.isPointInTriangle(t,e,i,s)&&(o.set(n.set(s.x,s.y,0),a.zAxis),o.intersectsTriangle(t,e,i,r))){var f=r.u,_=r.v,m=r.t,v=new a(m*h[g+0]+f*h[g+3]+_*h[g+6],m*h[g+1]+f*h[g+4]+_*h[g+7],m*h[g+2]+f*h[g+5]+_*h[g+8]),y=new a(m*d[c+0]+f*d[c+4]+_*d[c+8],m*d[c+1]+f*d[c+5]+_*d[c+9],m*d[c+2]+f*d[c+6]+_*d[c+10]);this.normal_changed_=v,this.position_changed_=y}}}()}),l}),t("x_ite/Components/NURBS/NurbsSweptSurface",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Geometry3D/Extrusion","x_ite/Components/NURBS/X3DParametricGeometryNode","x_ite/Bits/X3DConstants","x_ite/Bits/X3DCast"],function(t,e,i,n,o,r,s){"use strict";function u(t){o.call(this,t),this.addType(r.NurbsSweptSurface),this.extrusion=new n(t)}return u.prototype=Object.assign(Object.create(o.prototype),{constructor:u,fieldDefinitions:new i([new e(r.inputOutput,"metadata",new t.SFNode),new e(r.initializeOnly,"solid",new t.SFBool(!0)),new e(r.initializeOnly,"ccw",new t.SFBool(!0)),new e(r.inputOutput,"crossSectionCurve",new t.SFNode),new e(r.inputOutput,"trajectoryCurve",new t.SFNode)]),getTypeName:function(){return"NurbsSweptSurface"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"geometry"},initialize:function(){o.prototype.initialize.call(this),this.crossSectionCurve_.addInterest("set_crossSectionCurve__",this),this.trajectoryCurve_.addInterest("set_trajectoryCurve__",this);var t=this.extrusion;t.beginCap_=!1,t.endCap_=!1,t.solid_=!0,t.ccw_=!0,t.convex_=!0,t.creaseAngle_=Math.PI,t.setup(),t.crossSection_.setTainted(!0),t.spine_.setTainted(!0),this.set_crossSectionCurve__(),this.set_trajectoryCurve__()},set_crossSectionCurve__:function(){this.crossSectionCurveNode&&this.crossSectionCurveNode.removeInterest("requestRebuild",this),this.crossSectionCurveNode=s(r.X3DNurbsControlCurveNode,this.crossSectionCurve_),this.crossSectionCurveNode&&this.crossSectionCurveNode.addInterest("requestRebuild",this)},set_trajectoryCurve__:function(){this.trajectoryCurveNode&&this.trajectoryCurveNode.rebuild_.removeInterest("requestRebuild",this),this.trajectoryCurveNode=s(r.NurbsCurve,this.trajectoryCurve_),this.trajectoryCurveNode&&this.trajectoryCurveNode.rebuild_.addInterest("requestRebuild",this)},build:function(){if(this.crossSectionCurveNode&&this.trajectoryCurveNode){var t=this.extrusion;if(t.crossSection_=this.crossSectionCurveNode.tessellate(0),t.spine_=this.trajectoryCurveNode.tessellate(0),t.rebuild(),this.getColors().assign(t.getColors()),this.getTexCoords().assign(t.getTexCoords()),this.getNormals().assign(t.getNormals()),this.getVertices().assign(t.getVertices()),this.getMultiTexCoords().push(this.getTexCoords()),!this.ccw_.getValue())for(var e=this.getNormals(),i=0,n=e.length;i<n;++i)e[i]=-e[i];this.setSolid(this.solid_.getValue()),this.setCCW(this.ccw_.getValue())}}}),u}),t("x_ite/Components/NURBS/NurbsSwungSurface",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Geometry3D/Extrusion","x_ite/Components/NURBS/X3DParametricGeometryNode","x_ite/Bits/X3DConstants","x_ite/Bits/X3DCast"],function(t,e,i,n,o,r,s){"use strict";function u(t){o.call(this,t),this.addType(r.NurbsSwungSurface),this.extrusion=new n(t)}return u.prototype=Object.assign(Object.create(o.prototype),{constructor:u,fieldDefinitions:new i([new e(r.inputOutput,"metadata",new t.SFNode),new e(r.initializeOnly,"solid",new t.SFBool(!0)),new e(r.initializeOnly,"ccw",new t.SFBool(!0)),new e(r.inputOutput,"profileCurve",new t.SFNode),new e(r.inputOutput,"trajectoryCurve",new t.SFNode)]),getTypeName:function(){return"NurbsSwungSurface"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"geometry"},initialize:function(){o.prototype.initialize.call(this),this.profileCurve_.addInterest("set_profileCurve__",this),this.trajectoryCurve_.addInterest("set_trajectoryCurve__",this);var t=this.extrusion;t.beginCap_=!1,t.endCap_=!1,t.solid_=!0,t.ccw_=!0,t.convex_=!0,t.creaseAngle_=Math.PI,t.setup(),t.crossSection_.setTainted(!0),t.spine_.setTainted(!0),this.set_profileCurve__(),this.set_trajectoryCurve__()},set_profileCurve__:function(){this.profileCurveNode&&this.profileCurveNode.removeInterest("requestRebuild",this),this.profileCurveNode=s(r.X3DNurbsControlCurveNode,this.profileCurve_),this.profileCurveNode&&this.profileCurveNode.addInterest("requestRebuild",this)},set_trajectoryCurve__:function(){this.trajectoryCurveNode&&this.trajectoryCurveNode.removeInterest("requestRebuild",this),this.trajectoryCurveNode=s(r.X3DNurbsControlCurveNode,this.trajectoryCurve_),this.trajectoryCurveNode&&this.trajectoryCurveNode.addInterest("requestRebuild",this)},build:function(){if(this.profileCurveNode&&this.trajectoryCurveNode){var t=this.extrusion;if(t.crossSection_=this.profileCurveNode.tessellate(0),t.spine_=this.trajectoryCurveNode.tessellate(1),t.rebuild(),this.getColors().assign(t.getColors()),this.getTexCoords().assign(t.getTexCoords()),this.getNormals().assign(t.getNormals()),this.getVertices().assign(t.getVertices()),this.getMultiTexCoords().push(this.getTexCoords()),!this.ccw_.getValue())for(var e=this.getNormals(),i=0,n=e.length;i<n;++i)e[i]=-e[i];this.setSolid(this.solid_.getValue()),this.setCCW(this.ccw_.getValue())}}}),u}),t("x_ite/Components/NURBS/NurbsTextureCoordinate",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Core/X3DNode","x_ite/Bits/X3DConstants","standard/Math/Numbers/Vector4"],function(t,e,i,n,o,r){"use strict";function s(t){n.call(this,t),this.addType(o.NurbsTextureCoordinate),this.controlPoints=[]}return s.prototype=Object.assign(Object.create(n.prototype),{constructor:s,fieldDefinitions:new i([new e(o.inputOutput,"metadata",new t.SFNode),new e(o.initializeOnly,"uOrder",new t.SFInt32(3)),new e(o.initializeOnly,"vOrder",new t.SFInt32(3)),new e(o.initializeOnly,"uDimension",new t.SFInt32),new e(o.initializeOnly,"vDimension",new t.SFInt32),new e(o.initializeOnly,"uKnot",new t.MFDouble),new e(o.initializeOnly,"vKnot",new t.MFDouble),new e(o.inputOutput,"weight",new t.MFFloat),new e(o.inputOutput,"controlPoint",new t.MFVec2f)]),getTypeName:function(){return"NurbsTextureCoordinate"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"texCoord"},initialize:function(){n.prototype.initialize.call(this)},getControlPoints:function(t){for(var e=this.controlPoint_.getValue(),i=this.controlPoints,n=0,o=this.uDimension_.getValue();n<o;++n){var s=i[n];s||(s=i[n]=[]);for(var u=0,a=this.vDimension_.getValue();u<a;++u){var l=u*o+n,h=s[u]||new r,d=2*l;s[u]=h.set(e[d],e[d+1],0,t?t[l]:1)}}return i},isValid:function(){return!(this.uOrder_.getValue()<2)&&(!(this.vOrder_.getValue()<2)&&(!(this.uDimension_.getValue()<this.uOrder_.getValue())&&(!(this.vDimension_.getValue()<this.vOrder_.getValue())&&this.controlPoint_.length===this.uDimension_.getValue()*this.vDimension_.getValue())))}}),s}),t("x_ite/Components/NURBS/NurbsTrimmedSurface",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/NURBS/X3DNurbsSurfaceGeometryNode","x_ite/Bits/X3DConstants","x_ite/Bits/X3DCast"],function(t,e,i,n,o,r){"use strict";function s(t){n.call(this,t),this.addType(o.NurbsTrimmedSurface),this.trimmingContourNodes=[]}return s.prototype=Object.assign(Object.create(n.prototype),{constructor:s,fieldDefinitions:new i([new e(o.inputOutput,"metadata",new t.SFNode),new e(o.initializeOnly,"solid",new t.SFBool(!0)),new e(o.inputOutput,"uTessellation",new t.SFInt32),new e(o.inputOutput,"vTessellation",new t.SFInt32),new e(o.initializeOnly,"uClosed",new t.SFBool),new e(o.initializeOnly,"vClosed",new t.SFBool),new e(o.initializeOnly,"uOrder",new t.SFInt32(3)),new e(o.initializeOnly,"vOrder",new t.SFInt32(3)),new e(o.initializeOnly,"uDimension",new t.SFInt32),new e(o.initializeOnly,"vDimension",new t.SFInt32),new e(o.initializeOnly,"uKnot",new t.MFDouble),new e(o.initializeOnly,"vKnot",new t.MFDouble),new e(o.inputOutput,"weight",new t.MFDouble),new e(o.inputOutput,"texCoord",new t.SFNode),new e(o.inputOutput,"controlPoint",new t.SFNode),new e(o.inputOnly,"addTrimmingContour",new t.MFNode),new e(o.inputOnly,"removeTrimmingContour",new t.MFNode),new e(o.inputOutput,"trimmingContour",new t.MFNode)]),getTypeName:function(){return"NurbsTrimmedSurface"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"geometry"},initialize:function(){n.prototype.initialize.call(this),this.trimmingContour_.addInterest("set_trimmingContour__",this),this.set_trimmingContour__()},set_trimmingContour__:function(){var t=this.trimmingContourNodes;t.length=0;for(var e=0,i=this.trimmingContour_.length;e<i;++e){var n=r(o.Contour2D,this.trimmingContour_[e]);n&&t.push(n)}},getTrimmingContours:function(){for(var t=this.trimmingContourNodes,e=[],i=0,n=t.length;i<n;++i)t[i].addTrimmingContour(e);return e}}),s}),t(["x_ite/Components","x_ite/Components/NURBS/Contour2D","x_ite/Components/NURBS/ContourPolyline2D","x_ite/Components/NURBS/CoordinateDouble","x_ite/Components/NURBS/NurbsCurve","x_ite/Components/NURBS/NurbsCurve2D","x_ite/Components/NURBS/NurbsOrientationInterpolator","x_ite/Components/NURBS/NurbsPatchSurface","x_ite/Components/NURBS/NurbsPositionInterpolator","x_ite/Components/NURBS/NurbsSet","x_ite/Components/NURBS/NurbsSurfaceInterpolator","x_ite/Components/NURBS/NurbsSweptSurface","x_ite/Components/NURBS/NurbsSwungSurface","x_ite/Components/NURBS/NurbsTextureCoordinate","x_ite/Components/NURBS/NurbsTrimmedSurface","x_ite/Components/NURBS/X3DNurbsControlCurveNode","x_ite/Components/NURBS/X3DNurbsSurfaceGeometryNode","x_ite/Components/NURBS/X3DParametricGeometryNode"],function(t,e,i,n,o,r,s,u,a,l,h,d,c,g,p,f,_,m){"use strict";t.addComponent({name:"NURBS",types:{Contour2D:e,ContourPolyline2D:i,CoordinateDouble:n,NurbsCurve:o,NurbsCurve2D:r,NurbsOrientationInterpolator:s,NurbsPatchSurface:u,NurbsPositionInterpolator:a,NurbsSet:l,NurbsSurfaceInterpolator:h,NurbsSweptSurface:d,NurbsSwungSurface:c,NurbsTextureCoordinate:g,NurbsTrimmedSurface:p},abstractTypes:{X3DNurbsControlCurveNode:f,X3DNurbsSurfaceGeometryNode:_,X3DParametricGeometryNode:m}})})}();
