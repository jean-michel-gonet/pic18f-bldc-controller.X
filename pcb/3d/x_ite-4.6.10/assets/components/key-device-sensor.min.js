!function(){var e=X3D.define;X3D.require;e("x_ite/Browser/KeyDeviceSensor/X3DKeyDeviceSensorContext",["x_ite/Fields"],function(e){"use strict";function t(){}return t.prototype={initialize:function(){this.getElement().bind("keydown.X3DKeyDeviceSensorContext",this.keydown_X3DKeyDeviceSensorContext.bind(this)),this.getElement().bind("keyup.X3DKeyDeviceSensorContext",this.keyup_X3DKeyDeviceSensorContext.bind(this))},addKeyDeviceSensorNode:function(e){this.getKeyDeviceSensorNodes().add(e)},removeKeyDeviceSensorNode:function(e){this.getKeyDeviceSensorNodes().delete(e)},getKeyDeviceSensorNodes:function(){return void 0===this.keyDeviceSensorNodes&&(this.keyDeviceSensorNodes=new Set),this.keyDeviceSensorNodes},keydown_X3DKeyDeviceSensorContext:function(e){this.getKeyDeviceSensorNodes().forEach(function(t){t.keydown(e)})},keyup_X3DKeyDeviceSensorContext:function(e){this.getKeyDeviceSensorNodes().forEach(function(t){t.keyup(e)})}},t}),e("x_ite/Components/KeyDeviceSensor/X3DKeyDeviceSensorNode",["x_ite/Components/Core/X3DSensorNode","x_ite/Bits/X3DConstants"],function(e,t){"use strict";function s(s){e.call(this,s),this.addType(t.X3DKeyDeviceSensorNode)}return s.prototype=Object.assign(Object.create(e.prototype),{constructor:s,initialize:function(){e.prototype.initialize.call(this),this.isLive().addInterest("set_live__",this),this.set_live__()},set_live__:function(){this.isLive().getValue()?(this.enabled_.addInterest("set_enabled__",this),this.enabled_.getValue()&&this.enable()):(this.enabled_.removeInterest("set_enabled__",this),this.disable())},set_enabled__:function(){this.enabled_.getValue()?this.enable():this.disable()},enable:function(){this.getBrowser().addKeyDeviceSensorNode(this)},disable:function(){this.getBrowser().removeKeyDeviceSensorNode(this),this.release()},keydown:function(){},keyup:function(){},release:function(){}}),s}),e("x_ite/Components/KeyDeviceSensor/KeySensor",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/KeyDeviceSensor/X3DKeyDeviceSensorNode","x_ite/Bits/X3DConstants"],function(e,t,s,i,n){"use strict";function a(e){i.call(this,e),this.addType(n.KeySensor)}return a.prototype=Object.assign(Object.create(i.prototype),{constructor:a,fieldDefinitions:new s([new t(n.inputOutput,"metadata",new e.SFNode),new t(n.inputOutput,"enabled",new e.SFBool(!0)),new t(n.outputOnly,"controlKey",new e.SFBool),new t(n.outputOnly,"shiftKey",new e.SFBool),new t(n.outputOnly,"altKey",new e.SFBool),new t(n.outputOnly,"actionKeyPress",new e.SFInt32),new t(n.outputOnly,"actionKeyRelease",new e.SFInt32),new t(n.outputOnly,"keyPress",new e.SFString),new t(n.outputOnly,"keyRelease",new e.SFString),new t(n.outputOnly,"isActive",new e.SFBool)]),getTypeName:function(){return"KeySensor"},getComponentName:function(){return"KeyDeviceSensor"},getContainerField:function(){return"children"},keydown:function(e){switch(e.preventDefault(),this.isActive_.getValue()||(this.isActive_=!0),e.which){case 16:this.shiftKey_=!0;break;case 17:this.controlKey_=!0;break;case 18:this.altKey_=!0;break;case 112:this.actionKeyPress_=1;break;case 113:this.actionKeyPress_=2;break;case 114:this.actionKeyPress_=3;break;case 115:this.actionKeyPress_=4;break;case 116:this.actionKeyPress_=5;break;case 117:this.actionKeyPress_=6;break;case 118:this.actionKeyPress_=7;break;case 119:this.actionKeyPress_=8;break;case 120:this.actionKeyPress_=9;break;case 121:this.actionKeyPress_=10;break;case 122:this.actionKeyPress_=11;break;case 123:this.actionKeyPress_=12;break;case 36:this.actionKeyPress_=13;break;case 35:this.actionKeyPress_=14;break;case 33:this.actionKeyPress_=15;break;case 34:this.actionKeyPress_=16;break;case 38:this.actionKeyPress_=17;break;case 40:this.actionKeyPress_=18;break;case 37:this.actionKeyPress_=19;break;case 39:this.actionKeyPress_=20;break;default:if(e.charCode||e.keyCode)switch(e.key){case"AltGraph":case"CapsLock":case"Insert":break;case"Backspace":this.keyPress_=String.fromCharCode(8);break;case"Delete":this.keyPress_=String.fromCharCode(127);break;case"Enter":this.keyPress_="\n";break;case"Escape":this.keyPress_=String.fromCharCode(27);break;case"Tab":this.keyPress_="\t";break;default:1===e.key.length&&(this.keyPress_=e.key)}}},keyup:function(e){switch(e.preventDefault(),e.which){case 16:this.shiftKey_=!1;break;case 17:this.controlKey_=!1;break;case 18:this.altKey_=!1;break;case 112:this.actionKeyRelease_=1;break;case 113:this.actionKeyRelease_=2;break;case 114:this.actionKeyRelease_=3;break;case 115:this.actionKeyRelease_=4;break;case 116:this.actionKeyRelease_=5;break;case 117:this.actionKeyRelease_=6;break;case 118:this.actionKeyRelease_=7;break;case 119:this.actionKeyRelease_=8;break;case 120:this.actionKeyRelease_=9;break;case 121:this.actionKeyRelease_=10;break;case 122:this.actionKeyRelease_=11;break;case 123:this.actionKeyRelease_=12;break;case 36:this.actionKeyRelease_=13;break;case 35:this.actionKeyRelease_=14;break;case 33:this.actionKeyRelease_=15;break;case 34:this.actionKeyRelease_=16;break;case 38:this.actionKeyRelease_=17;break;case 40:this.actionKeyRelease_=18;break;case 37:this.actionKeyRelease_=19;break;case 39:this.actionKeyRelease_=20;break;default:if(e.charCode||e.keyCode)switch(e.key){case"AltGraph":case"CapsLock":case"Insert":break;case"Backspace":this.keyRelease_=String.fromCharCode(8);break;case"Delete":this.keyRelease_=String.fromCharCode(127);break;case"Enter":this.keyRelease_="\n";break;case"Escape":this.keyRelease_=String.fromCharCode(27);break;case"Tab":this.keyRelease_="\t";break;default:1===e.key.length&&(this.keyRelease_=e.key)}}this.isActive_.getValue()&&(this.isActive_=!1)},release:function(){this.shiftKey_.getValue()&&(this.shiftKey_=!1),this.controlKey_.getValue()&&(this.controlKey_=!1),this.altKey_.getValue()&&(this.altKey_=!1)}}),a}),e("x_ite/Components/KeyDeviceSensor/StringSensor",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/KeyDeviceSensor/X3DKeyDeviceSensorNode","x_ite/Bits/X3DConstants"],function(e,t,s,i,n){"use strict";function a(e){i.call(this,e),this.addType(n.StringSensor)}return a.prototype=Object.assign(Object.create(i.prototype),{constructor:a,fieldDefinitions:new s([new t(n.inputOutput,"metadata",new e.SFNode),new t(n.inputOutput,"enabled",new e.SFBool(!0)),new t(n.inputOutput,"deletionAllowed",new e.SFBool(!0)),new t(n.outputOnly,"enteredText",new e.SFString),new t(n.outputOnly,"finalText",new e.SFString),new t(n.outputOnly,"isActive",new e.SFBool)]),getTypeName:function(){return"StringSensor"},getComponentName:function(){return"KeyDeviceSensor"},getContainerField:function(){return"children"},keydown:function(e){switch(e.preventDefault(),e.key){case"Backspace":this.isActive_.getValue()&&this.deletionAllowed_.getValue()&&this.enteredText_.length&&(this.enteredText_=this.enteredText_.getValue().substr(0,this.enteredText_.length-1));break;case"Enter":this.finalText_=this.enteredText_,this.enteredText_.set(""),this.isActive_.getValue()&&(this.isActive_=!1);break;case"Escape":this.enteredText_.set(""),this.isActive_.getValue()&&(this.isActive_=!1);break;case"Tab":break;default:(e.charCode||e.keyCode)&&1===e.key.length&&(this.isActive_.getValue()||(this.isActive_=!0,this.enteredText_=""),this.enteredText_=this.enteredText_.getValue()+e.key)}}}),a}),e(["x_ite/Components","x_ite/Browser/KeyDeviceSensor/X3DKeyDeviceSensorContext","x_ite/Components/KeyDeviceSensor/KeySensor","x_ite/Components/KeyDeviceSensor/StringSensor","x_ite/Components/KeyDeviceSensor/X3DKeyDeviceSensorNode"],function(e,t,s,i,n){"use strict";e.addComponent({name:"KeyDeviceSensor",types:{KeySensor:s,StringSensor:i},abstractTypes:{X3DKeyDeviceSensorNode:n},browser:t})})}();
