!function(){var t=X3D.define;X3D.require;t("x_ite/Components/DIS/DISEntityManager",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Core/X3DChildNode","x_ite/Bits/X3DConstants"],function(t,n,e,i,u){"use strict";function o(t){i.call(this,t),this.addType(u.DISEntityManager)}return o.prototype=Object.assign(Object.create(i.prototype),{constructor:o,fieldDefinitions:new e([new n(u.inputOutput,"metadata",new t.SFNode),new n(u.inputOutput,"address",new t.SFString("localhost")),new n(u.inputOutput,"applicationID",new t.SFInt32(1)),new n(u.inputOutput,"mapping",new t.MFNode),new n(u.inputOutput,"port",new t.SFInt32),new n(u.inputOutput,"siteID",new t.SFInt32),new n(u.outputOnly,"addedEntities",new t.MFNode),new n(u.outputOnly,"removedEntities",new t.MFNode)]),getTypeName:function(){return"DISEntityManager"},getComponentName:function(){return"DIS"},getContainerField:function(){return"children"}}),o}),t("x_ite/Components/DIS/DISEntityTypeMapping",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Core/X3DInfoNode","x_ite/Bits/X3DConstants"],function(t,n,e,i,u){"use strict";function o(t){i.call(this,t),this.addType(u.DISEntityTypeMapping)}return o.prototype=Object.assign(Object.create(i.prototype),{constructor:o,fieldDefinitions:new e([new n(u.inputOutput,"metadata",new t.SFNode),new n(u.inputOutput,"url",new t.MFString),new n(u.initializeOnly,"category",new t.SFInt32),new n(u.initializeOnly,"country",new t.SFInt32),new n(u.initializeOnly,"domain",new t.SFInt32),new n(u.initializeOnly,"extra",new t.SFInt32),new n(u.initializeOnly,"kind",new t.SFInt32),new n(u.initializeOnly,"specific",new t.SFInt32),new n(u.initializeOnly,"subcategory",new t.SFInt32)]),getTypeName:function(){return"DISEntityTypeMapping"},getComponentName:function(){return"DIS"},getContainerField:function(){return"mapping"}}),o}),t("x_ite/Components/DIS/EspduTransform",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Grouping/X3DGroupingNode","x_ite/Components/Core/X3DSensorNode","x_ite/Bits/X3DConstants"],function(t,n,e,i,u,o){"use strict";function p(t){i.call(this,t),u.call(this,t),this.addType(o.EspduTransform)}return p.prototype=Object.assign(Object.create(i.prototype),u.prototype,{constructor:p,fieldDefinitions:new e([new n(o.inputOutput,"metadata",new t.SFNode),new n(o.inputOutput,"enabled",new t.SFBool(!0)),new n(o.initializeOnly,"bboxSize",new t.SFVec3f(-1,-1,-1)),new n(o.initializeOnly,"bboxCenter",new t.SFVec3f),new n(o.inputOnly,"addChildren",new t.MFNode),new n(o.inputOnly,"removeChildren",new t.MFNode),new n(o.inputOutput,"children",new t.MFNode),new n(o.outputOnly,"isActive",new t.SFBool),new n(o.inputOnly,"set_articulationParameterValue0",new t.SFFloat),new n(o.inputOnly,"set_articulationParameterValue1",new t.SFFloat),new n(o.inputOnly,"set_articulationParameterValue2",new t.SFFloat),new n(o.inputOnly,"set_articulationParameterValue3",new t.SFFloat),new n(o.inputOnly,"set_articulationParameterValue4",new t.SFFloat),new n(o.inputOnly,"set_articulationParameterValue5",new t.SFFloat),new n(o.inputOnly,"set_articulationParameterValue6",new t.SFFloat),new n(o.inputOnly,"set_articulationParameterValue7",new t.SFFloat),new n(o.inputOutput,"address",new t.SFString("localhost")),new n(o.inputOutput,"applicationID",new t.SFInt32(1)),new n(o.inputOutput,"articulationParameterCount",new t.SFInt32),new n(o.inputOutput,"articulationParameterDesignatorArray",new t.MFInt32),new n(o.inputOutput,"articulationParameterChangeIndicatorArray",new t.MFInt32),new n(o.inputOutput,"articulationParameterIdPartAttachedToArray",new t.MFInt32),new n(o.inputOutput,"articulationParameterTypeArray",new t.MFInt32),new n(o.inputOutput,"articulationParameterArray",new t.MFFloat),new n(o.inputOutput,"center",new t.SFVec3f),new n(o.inputOutput,"collisionType",new t.SFInt32),new n(o.inputOutput,"deadReckoning",new t.SFInt32),new n(o.inputOutput,"detonationLocation",new t.SFVec3f),new n(o.inputOutput,"detonationRelativeLocation",new t.SFVec3f),new n(o.inputOutput,"detonationResult",new t.SFInt32),new n(o.inputOutput,"entityCategory",new t.SFInt32),new n(o.inputOutput,"entityCountry",new t.SFInt32),new n(o.inputOutput,"entityDomain",new t.SFInt32),new n(o.inputOutput,"entityExtra",new t.SFInt32),new n(o.inputOutput,"entityID",new t.SFInt32),new n(o.inputOutput,"entityKind",new t.SFInt32),new n(o.inputOutput,"entitySpecific",new t.SFInt32),new n(o.inputOutput,"entitySubCategory",new t.SFInt32),new n(o.inputOutput,"eventApplicationID",new t.SFInt32(1)),new n(o.inputOutput,"eventEntityID",new t.SFInt32),new n(o.inputOutput,"eventNumber",new t.SFInt32),new n(o.inputOutput,"eventSiteID",new t.SFInt32),new n(o.inputOutput,"fired1",new t.SFBool),new n(o.inputOutput,"fired2",new t.SFBool),new n(o.inputOutput,"fireMissionIndex",new t.SFInt32),new n(o.inputOutput,"firingRange",new t.SFFloat),new n(o.inputOutput,"firingRate",new t.SFInt32),new n(o.inputOutput,"forceID",new t.SFInt32),new n(o.inputOutput,"fuse",new t.SFInt32),new n(o.inputOutput,"linearVelocity",new t.SFVec3f),new n(o.inputOutput,"linearAcceleration",new t.SFVec3f),new n(o.inputOutput,"marking",new t.SFString),new n(o.inputOutput,"multicastRelayHost",new t.SFString),new n(o.inputOutput,"multicastRelayPort",new t.SFInt32),new n(o.inputOutput,"munitionApplicationID",new t.SFInt32(1)),new n(o.inputOutput,"munitionEndPoint",new t.SFVec3f),new n(o.inputOutput,"munitionEntityID",new t.SFInt32),new n(o.inputOutput,"munitionQuantity",new t.SFInt32),new n(o.inputOutput,"munitionSiteID",new t.SFInt32),new n(o.inputOutput,"munitionStartPoint",new t.SFVec3f),new n(o.inputOutput,"networkMode",new t.SFString("standAlone")),new n(o.inputOutput,"port",new t.SFInt32),new n(o.inputOutput,"readInterval",new t.SFTime(.1)),new n(o.inputOutput,"rotation",new t.SFRotation),new n(o.inputOutput,"scale",new t.SFVec3f(1,1,1)),new n(o.inputOutput,"scaleOrientation",new t.SFRotation),new n(o.inputOutput,"siteID",new t.SFInt32),new n(o.inputOutput,"translation",new t.SFVec3f),new n(o.inputOutput,"warhead",new t.SFInt32),new n(o.inputOutput,"writeInterval",new t.SFTime(1)),new n(o.outputOnly,"articulationParameterValue0_changed",new t.SFFloat),new n(o.outputOnly,"articulationParameterValue1_changed",new t.SFFloat),new n(o.outputOnly,"articulationParameterValue2_changed",new t.SFFloat),new n(o.outputOnly,"articulationParameterValue3_changed",new t.SFFloat),new n(o.outputOnly,"articulationParameterValue4_changed",new t.SFFloat),new n(o.outputOnly,"articulationParameterValue5_changed",new t.SFFloat),new n(o.outputOnly,"articulationParameterValue6_changed",new t.SFFloat),new n(o.outputOnly,"articulationParameterValue7_changed",new t.SFFloat),new n(o.outputOnly,"collideTime",new t.SFTime),new n(o.outputOnly,"detonateTime",new t.SFTime),new n(o.outputOnly,"firedTime",new t.SFTime),new n(o.outputOnly,"isCollided",new t.SFBool),new n(o.outputOnly,"isDetonated",new t.SFBool),new n(o.outputOnly,"isNetworkReader",new t.SFBool),new n(o.outputOnly,"isNetworkWriter",new t.SFBool),new n(o.outputOnly,"isRtpHeaderHeard",new t.SFBool),new n(o.outputOnly,"isStandAlone",new t.SFBool),new n(o.outputOnly,"timestamp",new t.SFTime),new n(o.initializeOnly,"rtpHeaderExpected",new t.SFBool)]),getTypeName:function(){return"EspduTransform"},getComponentName:function(){return"DIS"},getContainerField:function(){return"children"},initialize:function(){i.prototype.initialize.call(this),u.prototype.initialize.call(this)}}),p}),t("x_ite/Components/DIS/ReceiverPdu",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Core/X3DSensorNode","x_ite/Components/Grouping/X3DBoundedObject","x_ite/Bits/X3DConstants"],function(t,n,e,i,u,o){"use strict";function p(t){i.call(this,t),u.call(this,t),this.addType(o.ReceiverPdu)}return p.prototype=Object.assign(Object.create(i.prototype),u.prototype,{constructor:p,fieldDefinitions:new e([new n(o.inputOutput,"metadata",new t.SFNode),new n(o.initializeOnly,"bboxSize",new t.SFVec3f(-1,-1,-1)),new n(o.initializeOnly,"bboxCenter",new t.SFVec3f),new n(o.inputOutput,"enabled",new t.SFBool(!0)),new n(o.outputOnly,"isActive",new t.SFBool),new n(o.inputOutput,"address",new t.SFString("localhost")),new n(o.inputOutput,"applicationID",new t.SFInt32(1)),new n(o.inputOutput,"entityID",new t.SFInt32),new n(o.inputOutput,"multicastRelayHost",new t.SFString),new n(o.inputOutput,"multicastRelayPort",new t.SFInt32),new n(o.inputOutput,"networkMode",new t.SFString("standAlone")),new n(o.inputOutput,"port",new t.SFInt32),new n(o.inputOutput,"radioID",new t.SFInt32),new n(o.inputOutput,"readInterval",new t.SFFloat(.1)),new n(o.inputOutput,"receivedPower",new t.SFFloat),new n(o.inputOutput,"receiverState",new t.SFInt32),new n(o.inputOutput,"rtpHeaderExpected",new t.SFBool),new n(o.inputOutput,"siteID",new t.SFInt32),new n(o.inputOutput,"transmitterApplicationID",new t.SFInt32(1)),new n(o.inputOutput,"transmitterEntityID",new t.SFInt32),new n(o.inputOutput,"transmitterRadioID",new t.SFInt32),new n(o.inputOutput,"transmitterSiteID",new t.SFInt32),new n(o.inputOutput,"whichGeometry",new t.SFInt32(1)),new n(o.inputOutput,"writeInterval",new t.SFFloat(1)),new n(o.outputOnly,"isNetworkReader",new t.SFBool),new n(o.outputOnly,"isNetworkWriter",new t.SFBool),new n(o.outputOnly,"isRtpHeaderHeard",new t.SFBool),new n(o.outputOnly,"isStandAlone",new t.SFBool),new n(o.outputOnly,"timestamp",new t.SFTime)]),getTypeName:function(){return"ReceiverPdu"},getComponentName:function(){return"DIS"},getContainerField:function(){return"children"},initialize:function(){i.prototype.initialize.call(this),u.prototype.initialize.call(this)}}),p}),t("x_ite/Components/DIS/SignalPdu",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Core/X3DSensorNode","x_ite/Components/Grouping/X3DBoundedObject","x_ite/Bits/X3DConstants"],function(t,n,e,i,u,o){"use strict";function p(t){i.call(this,t),u.call(this,t),this.addType(o.SignalPdu)}return p.prototype=Object.assign(Object.create(i.prototype),u.prototype,{constructor:p,fieldDefinitions:new e([new n(o.inputOutput,"metadata",new t.SFNode),new n(o.initializeOnly,"bboxSize",new t.SFVec3f(-1,-1,-1)),new n(o.initializeOnly,"bboxCenter",new t.SFVec3f),new n(o.inputOutput,"enabled",new t.SFBool(!0)),new n(o.outputOnly,"isActive",new t.SFBool),new n(o.inputOutput,"address",new t.SFString("localhost")),new n(o.inputOutput,"applicationID",new t.SFInt32(1)),new n(o.inputOutput,"data",new t.MFInt32),new n(o.inputOutput,"dataLength",new t.SFInt32),new n(o.inputOutput,"encodingScheme",new t.SFInt32),new n(o.inputOutput,"entityID",new t.SFInt32),new n(o.inputOutput,"multicastRelayHost",new t.SFString),new n(o.inputOutput,"multicastRelayPort",new t.SFInt32),new n(o.inputOutput,"networkMode",new t.SFString("standAlone")),new n(o.inputOutput,"port",new t.SFInt32),new n(o.inputOutput,"radioID",new t.SFInt32),new n(o.inputOutput,"readInterval",new t.SFFloat(.1)),new n(o.inputOutput,"rtpHeaderExpected",new t.SFBool),new n(o.inputOutput,"sampleRate",new t.SFInt32),new n(o.inputOutput,"samples",new t.SFInt32),new n(o.inputOutput,"siteID",new t.SFInt32),new n(o.inputOutput,"tdlType",new t.SFInt32),new n(o.inputOutput,"whichGeometry",new t.SFInt32(1)),new n(o.inputOutput,"writeInterval",new t.SFFloat(1)),new n(o.outputOnly,"isNetworkReader",new t.SFBool),new n(o.outputOnly,"isNetworkWriter",new t.SFBool),new n(o.outputOnly,"isRtpHeaderHeard",new t.SFBool),new n(o.outputOnly,"isStandAlone",new t.SFBool),new n(o.outputOnly,"timestamp",new t.SFTime)]),getTypeName:function(){return"SignalPdu"},getComponentName:function(){return"DIS"},getContainerField:function(){return"children"},initialize:function(){i.prototype.initialize.call(this),u.prototype.initialize.call(this)}}),p}),t("x_ite/Components/DIS/TransmitterPdu",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Core/X3DSensorNode","x_ite/Components/Grouping/X3DBoundedObject","x_ite/Bits/X3DConstants"],function(t,n,e,i,u,o){"use strict";function p(t){i.call(this,t),u.call(this,t),this.addType(o.TransmitterPdu)}return p.prototype=Object.assign(Object.create(i.prototype),u.prototype,{constructor:p,fieldDefinitions:new e([new n(o.inputOutput,"metadata",new t.SFNode),new n(o.initializeOnly,"bboxSize",new t.SFVec3f(-1,-1,-1)),new n(o.initializeOnly,"bboxCenter",new t.SFVec3f),new n(o.inputOutput,"enabled",new t.SFBool(!0)),new n(o.outputOnly,"isActive",new t.SFBool),new n(o.inputOutput,"address",new t.SFString("localhost")),new n(o.inputOutput,"antennaLocation",new t.SFVec3f),new n(o.inputOutput,"antennaPatternLength",new t.SFInt32),new n(o.inputOutput,"antennaPatternType",new t.SFInt32),new n(o.inputOutput,"applicationID",new t.SFInt32(1)),new n(o.inputOutput,"cryptoKeyID",new t.SFInt32),new n(o.inputOutput,"cryptoSystem",new t.SFInt32),new n(o.inputOutput,"entityID",new t.SFInt32),new n(o.inputOutput,"frequency",new t.SFInt32),new n(o.inputOutput,"inputSource",new t.SFInt32),new n(o.inputOutput,"lengthOfModulationParameters",new t.SFInt32),new n(o.inputOutput,"modulationTypeDetail",new t.SFInt32),new n(o.inputOutput,"modulationTypeMajor",new t.SFInt32),new n(o.inputOutput,"modulationTypeSpreadSpectrum",new t.SFInt32),new n(o.inputOutput,"modulationTypeSystem",new t.SFInt32),new n(o.inputOutput,"multicastRelayHost",new t.SFString),new n(o.inputOutput,"multicastRelayPort",new t.SFInt32),new n(o.inputOutput,"networkMode",new t.SFString("standAlone")),new n(o.inputOutput,"port",new t.SFInt32),new n(o.inputOutput,"power",new t.SFFloat),new n(o.inputOutput,"radioEntityTypeCategory",new t.SFInt32),new n(o.inputOutput,"radioEntityTypeCountry",new t.SFInt32),new n(o.inputOutput,"radioEntityTypeDomain",new t.SFInt32),new n(o.inputOutput,"radioEntityTypeKind",new t.SFInt32),new n(o.inputOutput,"radioEntityTypeNomenclature",new t.SFInt32),new n(o.inputOutput,"radioEntityTypeNomenclatureVersion",new t.SFInt32),new n(o.inputOutput,"radioID",new t.SFInt32),new n(o.inputOutput,"readInterval",new t.SFFloat(.1)),new n(o.inputOutput,"relativeAntennaLocation",new t.SFVec3f),new n(o.inputOutput,"rtpHeaderExpected",new t.SFBool),new n(o.inputOutput,"siteID",new t.SFInt32),new n(o.inputOutput,"transmitFrequencyBandwidth",new t.SFFloat),new n(o.inputOutput,"transmitState",new t.SFInt32),new n(o.inputOutput,"whichGeometry",new t.SFInt32(1)),new n(o.inputOutput,"writeInterval",new t.SFFloat(1)),new n(o.outputOnly,"isNetworkReader",new t.SFBool),new n(o.outputOnly,"isNetworkWriter",new t.SFBool),new n(o.outputOnly,"isRtpHeaderHeard",new t.SFBool),new n(o.outputOnly,"isStandAlone",new t.SFBool),new n(o.outputOnly,"timestamp",new t.SFTime)]),getTypeName:function(){return"TransmitterPdu"},getComponentName:function(){return"DIS"},getContainerField:function(){return"children"},initialize:function(){i.prototype.initialize.call(this),u.prototype.initialize.call(this)}}),p}),t(["x_ite/Components","x_ite/Components/DIS/DISEntityManager","x_ite/Components/DIS/DISEntityTypeMapping","x_ite/Components/DIS/EspduTransform","x_ite/Components/DIS/ReceiverPdu","x_ite/Components/DIS/SignalPdu","x_ite/Components/DIS/TransmitterPdu"],function(t,n,e,i,u,o,p){"use strict";t.addComponent({name:"DIS",types:{DISEntityManager:n,DISEntityTypeMapping:e,EspduTransform:i,ReceiverPdu:u,SignalPdu:o,TransmitterPdu:p},abstractTypes:{}})})}();
