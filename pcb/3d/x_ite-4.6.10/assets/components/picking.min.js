!function(){var e=X3D.define;X3D.require;e("x_ite/Browser/Picking/MatchCriterion",[],function(){"use strict";var e=0;return{MATCH_ANY:e++,MATCH_EVERY:e++,MATCH_ONLY_ONE:e++}}),e("x_ite/Browser/Picking/IntersectionType",[],function(){"use strict";var e=0;return{BOUNDS:e++,GEOMETRY:e++}}),e("x_ite/Browser/Picking/SortOrder",[],function(){"use strict";var e=0;return{ANY:e++,CLOSEST:e++,ALL:e++,ALL_SORTED:e++}}),e("x_ite/Components/Picking/X3DPickSensorNode",["x_ite/Fields","x_ite/Components/Core/X3DSensorNode","x_ite/Bits/TraverseType","x_ite/Bits/X3DConstants","x_ite/Browser/Picking/MatchCriterion","x_ite/Browser/Picking/IntersectionType","x_ite/Browser/Picking/SortOrder","standard/Math/Numbers/Matrix4","standard/Math/Algorithms/QuickSort","standard/Utility/ObjectCache"],function(e,t,i,n,o,r,s,c,a,h){"use strict";function p(e,t){return e.distance<t.distance}function g(i){t.call(this,i),this.addType(n.X3DPickSensorNode),this.objectType=new Set,this.intersectionType=r.BOUNDS,this.sortOrder=s.CLOSEST,this.pickTargetNodes=new Set,this.modelMatrices=[],this.targets=[],this.targets.size=0,this.pickedTargets=[],this.pickedTargetsSorter=new a(this.pickedTargets,p),this.pickedGeometries=new e.MFNode}var d=h(c);return g.prototype=Object.assign(Object.create(t.prototype),{constructor:g,initialize:function(){this.isLive().addInterest("set_live__",this),this.enabled_.addInterest("set_live__",this),this.objectType_.addInterest("set_objectType__",this),this.matchCriterion_.addInterest("set_matchCriterion__",this),this.intersectionType_.addInterest("set_intersectionType__",this),this.sortOrder_.addInterest("set_sortOrder__",this),this.pickTarget_.addInterest("set_pickTarget__",this),this.set_objectType__(),this.set_matchCriterion__(),this.set_intersectionType__(),this.set_sortOrder__(),this.set_pickTarget__()},getObjectType:function(){return this.objectType},getMatchCriterion:function(){return this.matchCriterion},getIntersectionType:function(){return this.intersectionType},getSortOrder:function(){return this.sortOrder},getModelMatrices:function(){return this.modelMatrices},getTargets:function(){return this.targets},getPickShape:function(){var e=new WeakMap;return function(t){var i=e.get(t);if(void 0!==i)return i;var n=this.getExecutionContext().createNode("Shape",!1),o=this.getExecutionContext().createNode("CollidableShape",!1);return n.setPrivate(!0),o.setPrivate(!0),o.setConvex(!0),n.geometry_=t,o.shape_=n,n.setup(),o.setup(),e.set(t,o),o}}(),getPickedGeometries:function(){return function(){var e=this.targets,t=e.size,i=this.pickedTargets,n=this.pickedGeometries;i.length=0;for(var o=0;o<t;++o){var r=e[o];r.intersected&&i.push(r)}if(0===i.length)return n.length=0,n;switch(this.sortOrder){case s.ANY:i.length=1,n[0]=this.getPickedGeometry(i[0]),n.length=1;break;case s.CLOSEST:this.pickedTargetsSorter.sort(0,i.length),i.length=1,n[0]=this.getPickedGeometry(i[0]),n.length=1;break;case s.ALL:for(var o=0,c=i.length;o<c;++o)n[o]=this.getPickedGeometry(i[o]);n.length=c;break;case s.ALL_SORTED:this.pickedTargetsSorter.sort(0,i.length);for(var o=0,c=i.length;o<c;++o)n[o]=this.getPickedGeometry(i[o]);n.length=c}return n}}(),getPickedGeometry:function(e){var t=this.getExecutionContext(),i=e.geometryNode;if(i.getExecutionContext()===t)return i;var o=i.getExecutionContext();if(o.getType().indexOf(n.X3DPrototypeInstance)!==-1&&o.getExecutionContext()===t)return o;for(var r=e.pickingHierarchy,s=r.length-1;s>=0;--s){var c=r[s];if(c.getExecutionContext()===t)return c;var o=c.getExecutionContext();if(o.getType().indexOf(n.X3DPrototypeInstance)!==-1&&o.getExecutionContext()===t)return o}return null},getPickedTargets:function(){return this.pickedTargets},set_live__:function(){this.isLive().getValue()&&this.enabled_.getValue()&&!this.objectType.has("NONE")?(this.getBrowser().addPickSensor(this),this.setPickableObject(!0)):(this.getBrowser().removePickSensor(this),this.setPickableObject(!1))},set_objectType__:function(){this.objectType.clear();for(var e=0,t=this.objectType_.length;e<t;++e)this.objectType.add(this.objectType_[e]);this.set_live__()},set_matchCriterion__:function(){var e=new Map([["MATCH_ANY",o.MATCH_ANY],["MATCH_EVERY",o.MATCH_EVERY],["MATCH_ONLY_ONE",o.MATCH_ONLY_ONE]]);return function(){this.matchCriterion=e.get(this.matchCriterion_.getValue()),void 0===this.matchCriterion&&(this.matchCriterion=MatchCriterionType.MATCH_ANY)}}(),set_intersectionType__:function(){var e=new Map([["BOUNDS",r.BOUNDS],["GEOMETRY",r.GEOMETRY]]);return function(){this.intersectionType=e.get(this.intersectionType_.getValue()),void 0===this.intersectionType&&(this.intersectionType=r.BOUNDS)}}(),set_sortOrder__:function(){var e=new Map([["ANY",s.ANY],["CLOSEST",s.CLOSEST],["ALL",s.ALL],["ALL_SORTED",s.ALL_SORTED]]);return function(){this.sortOrder=e.get(this.sortOrder_.getValue()),void 0===this.sortOrder&&(this.sortOrder=s.CLOSEST)}}(),set_pickTarget__:function(){this.pickTargetNodes.clear();for(var e=0,t=this.pickTarget_.length;e<t;++e)try{for(var i=this.pickTarget_[e].getValue().getInnerNode(),o=i.getType(),r=o.length-1;r>=0;--r)switch(o[r]){case n.Inline:case n.Shape:case n.X3DGroupingNode:this.pickTargetNodes.add(i);break;default:continue}}catch(e){}},traverse:function(e,t){e===i.PICKING&&this.getPickableObject()&&this.modelMatrices.push(d.pop().assign(t.getModelViewMatrix().get()))},collect:function(e,t,i){var n=this.pickTargetNodes;if(i.some(function(e){return n.has(e)})){var o=this.targets;if(o.size<o.length)var r=o[o.size];else{var r={modelMatrix:new c,pickingHierarchy:[],pickedPoint:[],intersections:[]};o.push(r)}++o.size,r.intersected=!1,r.geometryNode=e,r.pickedPoint.length=0,r.intersections.length=0,r.modelMatrix.assign(t);for(var s=r.pickingHierarchy,a=0,h=i.length;a<h;++a)s[a]=i[a];s.length=h}},process:function(){for(var e=this.modelMatrices,t=0,i=e.length;t<i;++t)d.push(e[t]);this.modelMatrices.length=0,this.targets.size=0}}),g}),e("x_ite/Components/Picking/LinePickSensor",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Picking/X3DPickSensorNode","x_ite/Bits/X3DConstants","x_ite/Browser/Picking/IntersectionType","standard/Math/Numbers/Vector3","standard/Math/Numbers/Matrix4","standard/Math/Geometry/Box3","standard/Math/Geometry/Line3"],function(e,t,i,n,o,r,s,c,a,h){"use strict";function p(e){n.call(this,e),this.addType(o.LinePickSensor),this.pickingGeometryNode=null}return p.prototype=Object.assign(Object.create(n.prototype),{constructor:p,fieldDefinitions:new i([new t(o.inputOutput,"metadata",new e.SFNode),new t(o.inputOutput,"enabled",new e.SFBool(!0)),new t(o.inputOutput,"objectType",new e.MFString("ALL")),new t(o.inputOutput,"matchCriterion",new e.SFString("MATCH_ANY")),new t(o.initializeOnly,"intersectionType",new e.SFString("BOUNDS")),new t(o.initializeOnly,"sortOrder",new e.SFString("CLOSEST")),new t(o.outputOnly,"isActive",new e.SFBool),new t(o.outputOnly,"pickedTextureCoordinate",new e.MFVec3f),new t(o.outputOnly,"pickedNormal",new e.MFVec3f),new t(o.outputOnly,"pickedPoint",new e.MFVec3f),new t(o.inputOutput,"pickingGeometry",new e.SFNode),new t(o.inputOutput,"pickTarget",new e.MFNode),new t(o.outputOnly,"pickedGeometry",new e.MFNode)]),getTypeName:function(){return"LinePickSensor"},getComponentName:function(){return"Picking"},getContainerField:function(){return"children"},initialize:function(){n.prototype.initialize.call(this),this.pickingGeometry_.addInterest("set_pickingGeometry__",this),this.set_pickingGeometry__()},set_pickingGeometry__:function(){this.pickingGeometryNode=null;try{for(var e=this.pickingGeometry_.getValue().getInnerNode(),t=e.getType(),i=t.length-1;i>=0;--i)switch(t[i]){case o.IndexedLineSet:case o.LineSet:this.pickingGeometryNode=e;break;default:continue}}catch(e){}},process:function(){var t=new a,i=new a,o=new s(0,0,0),p=new s(0,0,0),g=new c,d=new s(0,0,0),u=new s(0,0,0),l=new h(s.Zero,s.zAxis),m=new s(0,0,0),_=new s(0,0,0),y=[],k=[],f=new s(0,0,0),w=new e.MFVec3f,S=new e.MFVec3f,v=new e.MFVec3f;return function(){if(this.pickingGeometryNode){var e=this.getModelMatrices(),s=this.getTargets();switch(this.getIntersectionType()){case r.BOUNDS:for(var c=0,a=e.length;c<a;++c){var h=e[c];t.assign(this.pickingGeometryNode.getBBox()).multRight(h);for(var C=0,T=s.size;C<T;++C){var N=s[C];i.assign(N.geometryNode.getBBox()).multRight(N.modelMatrix),t.intersectsBox(i)&&(o.assign(t.center),p.assign(i.center),N.intersected=!0,N.distance=o.distance(p))}}var O=this.getPickedGeometries(),b=Boolean(O.length);O.remove(0,O.length,null),b!==this.isActive_.getValue()&&(this.isActive_=b),this.pickedGeometry_.equals(O)||(this.pickedGeometry_=O);break;case r.GEOMETRY:for(var c=0,a=e.length;c<a;++c){var h=e[c];t.assign(this.pickingGeometryNode.getBBox()).multRight(h);for(var C=0,T=s.size;C<T;++C)try{var N=s[C],x=N.geometryNode,P=this.pickingGeometryNode.getVertices();i.assign(x.getBBox()).multRight(N.modelMatrix),g.assign(N.modelMatrix).inverse().multLeft(h);for(var B=0,M=P.length;B<M;B+=8)if(g.multVecMatrix(d.set(P[B+0],P[B+1],P[B+2])),g.multVecMatrix(u.set(P[B+4],P[B+5],P[B+6])),l.setPoints(d,u),k.length=0,x.intersectsLine(l,y,N.modelMatrix,k))for(var G=0,D=k.length;G<D;++G){var F=k[G];m.assign(F.point).subtract(d),_.assign(F.point).subtract(u);var A=m.add(_).abs(),V=d.distance(u);A<=V&&N.intersections.push(F)}N.intersections.length&&(o.assign(t.center),p.assign(i.center),N.intersected=!0,N.distance=o.distance(p))}catch(e){console.log(e)}}var O=this.getPickedGeometries(),b=Boolean(O.length);O.remove(0,O.length,null),b!==this.isActive_.getValue()&&(this.isActive_=b),this.pickedGeometry_.equals(O)||(this.pickedGeometry_=O);var j=this.getPickedTargets();w.length=0,S.length=0,v.length=0;for(var C=0,T=j.length;C<T;++C)for(var L=j[C].intersections,G=0,D=L.length;G<D;++G){var F=L[G],C=F.texCoord;f.set(C.x,C.y,C.z),w.push(f),S.push(F.normal),v.push(F.point)}this.pickedTextureCoordinate_.equals(w)||(this.pickedTextureCoordinate_=w),this.pickedNormal_.equals(S)||(this.pickedNormal_=S),this.pickedPoint_.equals(v)||(this.pickedPoint_=v)}}n.prototype.process.call(this)}}()}),p}),e("x_ite/Components/Picking/X3DPickableObject",["x_ite/Bits/X3DConstants"],function(e){"use strict";function t(t){this.addType(e.X3DPickableObject),this.objectType=new Set}return t.prototype={constructor:t,initialize:function(){this.objectType_.addInterest("set_objectType__",this),this.set_objectType__()},getObjectType:function(){return this.objectType},set_objectType__:function(){this.objectType.clear();for(var e=0,t=this.objectType_.length;e<t;++e)this.objectType.add(this.objectType_[e])}},t}),e("x_ite/Components/Picking/PickableGroup",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Grouping/X3DGroupingNode","x_ite/Components/Picking/X3DPickableObject","x_ite/Browser/Picking/MatchCriterion","x_ite/Bits/X3DConstants","x_ite/Bits/TraverseType"],function(e,t,i,n,o,r,s,c){"use strict";function a(e){n.call(this,e),o.call(this,e),this.addType(s.PickableGroup)}return a.prototype=Object.assign(Object.create(n.prototype),o.prototype,{constructor:a,fieldDefinitions:new i([new t(s.inputOutput,"metadata",new e.SFNode),new t(s.inputOutput,"pickable",new e.SFBool(!0)),new t(s.inputOutput,"objectType",new e.MFString("ALL")),new t(s.initializeOnly,"bboxSize",new e.SFVec3f(-1,-1,-1)),new t(s.initializeOnly,"bboxCenter",new e.SFVec3f),new t(s.inputOnly,"addChildren",new e.MFNode),new t(s.inputOnly,"removeChildren",new e.MFNode),new t(s.inputOutput,"children",new e.MFNode)]),getTypeName:function(){return"PickableGroup"},getComponentName:function(){return"Picking"},getContainerField:function(){return"children"},initialize:function(){n.prototype.initialize.call(this),o.prototype.initialize.call(this),this.pickable_.addInterest("set_pickable__",this),this.set_pickable__()},set_pickableObjects__:function(){this.set_pickable__()},set_pickable__:function(){this.setPickableObject(Boolean(this.pickable_.getValue()||this.getTransformSensors().size))},traverse:function(){var e=new Set;return function(t,i){if(t===c.PICKING){if(this.pickable_.getValue()){if(this.getObjectType().has("NONE"))return;var o=i.getBrowser(),s=o.getPickable();if(this.getObjectType().has("ALL"))s.push(!0),n.prototype.traverse.call(this,t,i),s.pop();else{var a=o.getPickSensors();a[a.length-1].forEach(function(t){if(!t.getObjectType().has("ALL")){var i=0;for(var n of this.getObjectType())if(t.getObjectType().has(n)){++i;break}switch(t.getMatchCriterion()){case r.MATCH_ANY:if(0===i)return;break;case r.MATCH_EVERY:if(i!==pickSensor.getObjectType().size)return;break;case r.MATCH_ONLY_ONE:if(1!==i)return}}e.add(t)},this),s.push(!0),a.push(e),n.prototype.traverse.call(this,t,i),a.pop(),s.pop(),e.clear()}}}else n.prototype.traverse.call(this,t,i)}}()}),a}),e("x_ite/Browser/Picking/VolumePicker",["standard/Math/Numbers/Vector3","standard/Math/Numbers/Rotation4","standard/Math/Numbers/Matrix4",X3D.getComponentUrl("rigid-body-physics")],function(e,t,i,n){"use strict";function o(){this.broadphase=new r.btDbvtBroadphase,this.collisionConfiguration=new r.btDefaultCollisionConfiguration,this.dispatcher=new r.btCollisionDispatcher(this.collisionConfiguration),this.collisionWorld=new r.btCollisionWorld(this.dispatcher,this.broadphase,this.collisionConfiguration),this.compoundShape1=new r.btCompoundShape,this.motionState1=new r.btDefaultMotionState,this.constructionInfo1=new r.btRigidBodyConstructionInfo(0,this.motionState1,this.compoundShape1),this.rigidBody1=new r.btRigidBody(this.constructionInfo1),this.compoundShape2=new r.btCompoundShape,this.motionState2=new r.btDefaultMotionState,this.constructionInfo2=new r.btRigidBodyConstructionInfo(0,this.motionState2,this.compoundShape2),this.rigidBody2=new r.btRigidBody(this.constructionInfo2),this.collisionWorld.addCollisionObject(this.rigidBody1),this.collisionWorld.addCollisionObject(this.rigidBody2)}var r=n.Ammo;return o.prototype={constuctor:o,setChildShape1:function(e,t){this.setChildShape(this.compoundShape1,e,t)},setChildShape2:function(e,t){this.setChildShape(this.compoundShape2,e,t)},setChildShape1Components:function(e,t,i){this.setChildShapeComponents(this.compoundShape1,e,t,i)},setChildShape2Components:function(e,t,i){this.setChildShapeComponents(this.compoundShape2,e,t,i)},setChildShape:function(){var i=new e(0,0,0),n=new t(0,0,1,0),o=new e(1,1,1),s=new r.btVector3(0,0,0);return function(e,t,r){e.getNumChildShapes()&&e.removeChildShapeByIndex(0),r.getNumChildShapes()&&(t.get(i,n,o),s.setValue(o.x,o.y,o.z),r.setLocalScaling(s),e.addChildShape(this.getTransform(i,n),r))}}(),setChildShapeComponents:function(e,t,i,n){e.getNumChildShapes()&&e.removeChildShapeByIndex(0),n.getNumChildShapes()&&(n.setLocalScaling(i),e.addChildShape(t,n))},contactTest:function(){this.collisionWorld.performDiscreteCollisionDetection();for(var e=this.dispatcher.getNumManifolds(),t=0;t<e;++t)for(var i=this.dispatcher.getManifoldByIndexInternal(t),n=i.getNumContacts(),o=0;o<n;++o){var r=i.getContactPoint(o);if(r.getDistance()<=0)return!0}return!1},getTransform:function(){var e=new r.btTransform,t=new r.btVector3(0,0,0),n=new i;return function(i,o,r){var s=r||e;return n.set(i,o),t.setValue(n[12],n[13],n[14]),s.getBasis().setValue(n[0],n[4],n[8],n[1],n[5],n[9],n[2],n[6],n[10]),s.setOrigin(t),s}}()},o}),e("x_ite/Components/Picking/PointPickSensor",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Picking/X3DPickSensorNode","x_ite/Bits/X3DCast","x_ite/Bits/X3DConstants","x_ite/Browser/Picking/IntersectionType","x_ite/Browser/Picking/VolumePicker","standard/Math/Numbers/Vector3","standard/Math/Numbers/Rotation4","standard/Math/Geometry/Box3",X3D.getComponentUrl("rigid-body-physics")],function(e,t,i,n,o,r,s,c,a,h,p,g){"use strict";function d(e){n.call(this,e),this.addType(r.PointPickSensor),this.pickingGeometryNode=null,this.picker=new c,this.compoundShapes=[]}var u=g.Ammo;return d.prototype=Object.assign(Object.create(n.prototype),{constructor:d,fieldDefinitions:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.inputOutput,"enabled",new e.SFBool(!0)),new t(r.inputOutput,"objectType",new e.MFString("ALL")),new t(r.inputOutput,"matchCriterion",new e.SFString("MATCH_ANY")),new t(r.initializeOnly,"intersectionType",new e.SFString("BOUNDS")),new t(r.initializeOnly,"sortOrder",new e.SFString("CLOSEST")),new t(r.outputOnly,"isActive",new e.SFBool),new t(r.outputOnly,"pickedPoint",new e.MFVec3f),new t(r.inputOutput,"pickingGeometry",new e.SFNode),new t(r.inputOutput,"pickTarget",new e.MFNode),new t(r.outputOnly,"pickedGeometry",new e.MFNode)]),getTypeName:function(){return"PointPickSensor"},getComponentName:function(){return"Picking"},getContainerField:function(){return"children"},initialize:function(){n.prototype.initialize.call(this),this.pickingGeometry_.addInterest("set_pickingGeometry__",this),this.set_pickingGeometry__()},set_pickingGeometry__:function(){this.pickingGeometryNode&&this.pickingGeometryNode.rebuild_.removeInterest("set_geometry__",this),this.pickingGeometryNode=o(r.PointSet,this.pickingGeometry_),this.pickingGeometryNode&&this.pickingGeometryNode.rebuild_.addInterest("set_geometry__",this),this.set_geometry__()},set_geometry__:function(){var e=new u.btVector3(1,1,1),t=new u.btVector3,i=new u.btTransform;return function(){var n=this.compoundShapes;if(this.pickingGeometryNode){var o=this.pickingGeometryNode.getCoord();if(o){for(var r=0,s=o.getSize();r<s;++r)if(r<n.length){var c=n[r],h=o.get1Point(r,c.point);t.setValue(h.x,h.y,h.z),i.setOrigin(t),c.setLocalScaling(e),c.updateChildTransform(0,i)}else{var c=new u.btCompoundShape,p=new u.btSphereShape(0),h=o.get1Point(r,new a(0,0,0));c.point=h,t.setValue(h.x,h.y,h.z),i.setOrigin(t),c.addChildShape(i,p),n.push(c)}n.length=s}else n.length=0}else n.length=0}}(),process:function(){var t=new p,i=new p,o=new a(0,0,0),r=new a(0,0,0),c=new u.btTransform,g=new u.btVector3,d=new a(0,0,0),l=new h(0,0,1,0),m=new a(1,1,1),_=new e.MFVec3f;return function(){if(this.pickingGeometryNode){var e=this.getModelMatrices(),a=this.getTargets();switch(this.getIntersectionType()){case s.BOUNDS:for(var h=0,p=e.length;h<p;++h){var u=e[h];t.assign(this.pickingGeometryNode.getBBox()).multRight(u);for(var y=0,k=a.size;y<k;++y){var f=a[y];i.assign(f.geometryNode.getBBox()).multRight(f.modelMatrix),t.intersectsBox(i)&&(o.assign(t.center),r.assign(i.center),f.intersected=!0,f.distance=o.distance(r))}}var w=this.getPickedGeometries(),S=Boolean(w.length);w.remove(0,w.length,null),S!==this.isActive_.getValue()&&(this.isActive_=S),this.pickedGeometry_.equals(w)||(this.pickedGeometry_=w);break;case s.GEOMETRY:for(var v=this.picker,C=this.compoundShapes,h=0,p=e.length;h<p;++h){var u=e[h];t.assign(this.pickingGeometryNode.getBBox()).multRight(u),u.get(d,l,m),v.getTransform(d,l,c),g.setValue(m.x,m.y,m.z);for(var T=0,N=C.length;T<N;++T){var O=C[T];v.setChildShape1Components(c,g,O);for(var y=0,k=a.size;y<k;++y){var f=a[y],b=this.getPickShape(f.geometryNode);i.assign(f.geometryNode.getBBox()).multRight(f.modelMatrix),v.setChildShape2(f.modelMatrix,b.getCompoundShape()),v.contactTest()&&(o.assign(t.center),r.assign(i.center),f.intersected=!0,f.distance=o.distance(r),f.pickedPoint.push(O.point))}}}var w=this.getPickedGeometries(),S=Boolean(w.length);w.remove(0,w.length,null),S!==this.isActive_.getValue()&&(this.isActive_=S),this.pickedGeometry_.equals(w)||(this.pickedGeometry_=w);var x=this.getPickedTargets();_.length=0;for(var y=0,k=x.length;y<k;++y)for(var P=x[y].pickedPoint,B=0,M=P.length;B<M;++B)_.push(P[B]);this.pickedPoint_.equals(_)||(this.pickedPoint_=_)}}n.prototype.process.call(this)}}()}),d}),e("x_ite/Components/Picking/PrimitivePickSensor",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Picking/X3DPickSensorNode","x_ite/Bits/X3DConstants","x_ite/Browser/Picking/IntersectionType","x_ite/Browser/Picking/VolumePicker","standard/Math/Numbers/Vector3","standard/Math/Geometry/Box3"],function(e,t,i,n,o,r,s,c,a){"use strict";function h(e){n.call(this,e),this.addType(o.PrimitivePickSensor),this.pickingGeometryNode=null,this.picker=new s}return h.prototype=Object.assign(Object.create(n.prototype),{constructor:h,fieldDefinitions:new i([new t(o.inputOutput,"metadata",new e.SFNode),new t(o.inputOutput,"enabled",new e.SFBool(!0)),new t(o.inputOutput,"objectType",new e.MFString("ALL")),new t(o.inputOutput,"matchCriterion",new e.SFString("MATCH_ANY")),new t(o.initializeOnly,"intersectionType",new e.SFString("BOUNDS")),new t(o.initializeOnly,"sortOrder",new e.SFString("CLOSEST")),new t(o.outputOnly,"isActive",new e.SFBool),new t(o.inputOutput,"pickingGeometry",new e.SFNode),new t(o.inputOutput,"pickTarget",new e.MFNode),new t(o.outputOnly,"pickedGeometry",new e.MFNode)]),getTypeName:function(){return"PrimitivePickSensor"},getComponentName:function(){return"Picking"},getContainerField:function(){return"children"},initialize:function(){n.prototype.initialize.call(this),this.pickingGeometry_.addInterest("set_pickingGeometry__",this),this.set_pickingGeometry__()},set_pickingGeometry__:function(){this.pickingGeometryNode=null;try{for(var e=this.pickingGeometry_.getValue().getInnerNode(),t=e.getType(),i=t.length-1;i>=0;--i)switch(t[i]){case o.Box:case o.Cone:case o.Cylinder:case o.Sphere:this.pickingGeometryNode=e;break;default:continue}}catch(e){}},process:function(){var e=new a,t=new a,i=new c(0,0,0),o=new c(0,0,0);return function(){if(this.pickingGeometryNode){var s=this.getModelMatrices(),c=this.getTargets();switch(this.getIntersectionType()){case r.BOUNDS:for(var a=0,h=s.length;a<h;++a){var p=s[a];e.assign(this.pickingGeometryNode.getBBox()).multRight(p);for(var g=0,d=c.size;g<d;++g){var u=c[g];t.assign(u.geometryNode.getBBox()).multRight(u.modelMatrix),e.intersectsBox(t)&&(i.assign(e.center),o.assign(t.center),u.intersected=!0,u.distance=i.distance(o))}}var l=this.getPickedGeometries(),m=Boolean(l.length);l.remove(0,l.length,null),m!==this.isActive_.getValue()&&(this.isActive_=m),this.pickedGeometry_.equals(l)||(this.pickedGeometry_=l);break;case r.GEOMETRY:for(var _=this.picker,a=0,h=s.length;a<h;++a){var p=s[a],y=this.getPickShape(this.pickingGeometryNode);e.assign(this.pickingGeometryNode.getBBox()).multRight(p),_.setChildShape1(p,y.getCompoundShape());for(var g=0,d=c.size;g<d;++g){var u=c[g],k=this.getPickShape(u.geometryNode);t.assign(u.geometryNode.getBBox()).multRight(u.modelMatrix),_.setChildShape2(u.modelMatrix,k.getCompoundShape()),_.contactTest()&&(i.assign(e.center),o.assign(t.center),u.intersected=!0,u.distance=i.distance(o))}}var l=this.getPickedGeometries(),m=Boolean(l.length);l.remove(0,l.length,null),m!==this.isActive_.getValue()&&(this.isActive_=m),this.pickedGeometry_.equals(l)||(this.pickedGeometry_=l)}}n.prototype.process.call(this)}}()}),h}),e("x_ite/Components/Picking/VolumePickSensor",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Picking/X3DPickSensorNode","x_ite/Bits/X3DCast","x_ite/Bits/X3DConstants","x_ite/Browser/Picking/IntersectionType","x_ite/Browser/Picking/VolumePicker","standard/Math/Numbers/Vector3","standard/Math/Geometry/Box3"],function(e,t,i,n,o,r,s,c,a,h){"use strict";function p(e){n.call(this,e),this.addType(r.VolumePickSensor),this.pickingGeometryNode=null,this.picker=new c}return p.prototype=Object.assign(Object.create(n.prototype),{constructor:p,fieldDefinitions:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.inputOutput,"enabled",new e.SFBool(!0)),new t(r.inputOutput,"objectType",new e.MFString("ALL")),new t(r.inputOutput,"matchCriterion",new e.SFString("MATCH_ANY")),new t(r.initializeOnly,"intersectionType",new e.SFString("BOUNDS")),new t(r.initializeOnly,"sortOrder",new e.SFString("CLOSEST")),new t(r.outputOnly,"isActive",new e.SFBool),new t(r.inputOutput,"pickingGeometry",new e.SFNode),new t(r.inputOutput,"pickTarget",new e.MFNode),new t(r.outputOnly,"pickedGeometry",new e.MFNode)]),getTypeName:function(){return"VolumePickSensor"},getComponentName:function(){return"Picking"},getContainerField:function(){return"children"},initialize:function(){n.prototype.initialize.call(this),this.pickingGeometry_.addInterest("set_pickingGeometry__",this),this.set_pickingGeometry__()},set_pickingGeometry__:function(){this.pickingGeometryNode=o(r.X3DGeometryNode,this.pickingGeometry_)},process:function(){var e=new h,t=new h,i=new a(0,0,0),o=new a(0,0,0);return function(){if(this.pickingGeometryNode){var r=this.getModelMatrices(),c=this.getTargets();switch(this.getIntersectionType()){case s.BOUNDS:for(var a=0,h=r.length;a<h;++a){var p=r[a];e.assign(this.pickingGeometryNode.getBBox()).multRight(p);for(var g=0,d=c.size;g<d;++g){var u=c[g];t.assign(u.geometryNode.getBBox()).multRight(u.modelMatrix),e.intersectsBox(t)&&(i.assign(e.center),o.assign(t.center),u.intersected=!0,u.distance=i.distance(o))}}var l=this.getPickedGeometries(),m=Boolean(l.length);l.remove(0,l.length,null),m!==this.isActive_.getValue()&&(this.isActive_=m),this.pickedGeometry_.equals(l)||(this.pickedGeometry_=l);break;case s.GEOMETRY:for(var _=this.picker,a=0,h=r.length;a<h;++a){var p=r[a],y=this.getPickShape(this.pickingGeometryNode);e.assign(this.pickingGeometryNode.getBBox()).multRight(p),_.setChildShape1(p,y.getCompoundShape());for(var g=0,d=c.size;g<d;++g){var u=c[g],k=this.getPickShape(u.geometryNode);t.assign(u.geometryNode.getBBox()).multRight(u.modelMatrix),_.setChildShape2(u.modelMatrix,k.getCompoundShape()),_.contactTest()&&(i.assign(e.center),o.assign(t.center),u.intersected=!0,u.distance=i.distance(o))}}var l=this.getPickedGeometries(),m=Boolean(l.length);l.remove(0,l.length,null),m!==this.isActive_.getValue()&&(this.isActive_=m),this.pickedGeometry_.equals(l)||(this.pickedGeometry_=l)}}n.prototype.process.call(this)}}()}),p}),e(["x_ite/Components","x_ite/Components/Picking/LinePickSensor","x_ite/Components/Picking/PickableGroup","x_ite/Components/Picking/PointPickSensor","x_ite/Components/Picking/PrimitivePickSensor","x_ite/Components/Picking/VolumePickSensor","x_ite/Components/Picking/X3DPickSensorNode","x_ite/Components/Picking/X3DPickableObject",X3D.getComponentUrl("rigid-body-physics")],function(e,t,i,n,o,r,s,c){"use strict";e.addComponent({name:"Picking",types:{LinePickSensor:t,PickableGroup:i,PointPickSensor:n,PrimitivePickSensor:o,VolumePickSensor:r},abstractTypes:{X3DPickSensorNode:s,X3DPickableObject:c}})})}();
